# -*- ck2.scripted_effects -*-

#Used to assign newly created holdings with proper base variables
arles_holding_initial_setup_effect = {
	#Remove previous holding modifiers just in case
	remove_holding_modifier = arles_holding_pop1
	remove_holding_modifier = arles_holding_pop2
	remove_holding_modifier = arles_holding_pop3
	remove_holding_modifier = arles_holding_pop4
	remove_holding_modifier = arles_holding_pop4_tribal
	remove_holding_modifier = arles_holding_pop5
	#Begin setting province defines
	add_holding_modifier = { modifier = arles_holding_pop1 duration = -1 }
	set_variable = { which = holding_pop value = 0 }
	set_variable = { which = holding_pop_diff value = 0 }
	set_variable = { which = holding_pop_diff_terr value = 0 }
	set_variable = { which = holding_pop_diff_trade value = 1 }
	set_variable = { which = holding_pop_dmg value = 0 }
	set_variable = { which = holding_pop_diff_disease value = 1 }
}

#Used to assign newly created holdings with proper base population buildings
arles_holding_initial_pop_building_effect = {
	if = {
		limit = { 
			NOT = {
				has_building = ca_town_1
				has_building = ct_marketplace_1
				has_building = tp_town_1
				has_building = tb_market_town_1
			}
		}
		if = {
			limit = { holding_type = castle }
			add_building = ca_town_1
			log = "MAINT: Successfully built new housing in castle"
			location = {
				set_variable = { which = province_pop_diff value = 0 }
				change_variable = { which = province_pop_diff value = 1.25 }
				multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
				change_variable = { which = province_pop which = province_pop_diff }
				log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			}
		}
		if = {
			limit = { holding_type = city }
			add_building = ct_marketplace_1
			log = "MAINT: Successfully built new housing in city"
			location = {
				set_variable = { which = province_pop_diff value = 0 }
				change_variable = { which = province_pop_diff value = 1.25 }
				multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
				change_variable = { which = province_pop which = province_pop_diff }
				log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			}
		}
		if = {
			limit = { holding_type = temple }
			add_building = tp_town_1
			log = "MAINT: Successfully built new housing in temple"
			location = {
				set_variable = { which = province_pop_diff value = 0 }
				change_variable = { which = province_pop_diff value = 1.25 }
				multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
				change_variable = { which = province_pop which = province_pop_diff }
				log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			}
		}
		if = {
			limit = { holding_type = tribal }
			add_building = tb_market_town_1
			log = "MAINT: Successfully built new housing in tribal village"
			location = {
				set_variable = { which = province_pop_diff value = 0 }
				change_variable = { which = province_pop_diff value = 0.75 }
				multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
				change_variable = { which = province_pop which = province_pop_diff }
				log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			}
		}
	}
}

#Used to convert initial population buildings to base Prosperity Level
arles_holding_initial_pop_level_effect = {	
	if = { 
		limit = { has_building = tb_market_town_1 }
		change_variable = { which = holding_pop_diff value = 25 }
		log = "MAINT: Added initial holding pop of [This.holding_pop.GetValue] to [This.GetName] ([This.GetID])"
		change_variable = { which = holding_pop which = holding_pop_diff }
		set_variable = { which = holding_pop_diff value = 0 }
	}
	if = {
		limit = { 
			OR = {
				has_building = ca_town_1
				has_building = ct_marketplace_1
				has_building = tp_town_1
				has_building = tb_market_town_2
			}
		}
		change_variable = { which = holding_pop_diff value = 75 }
		log = "MAINT: Added initial holding pop of [This.holding_pop.GetValue] to [This.GetName] ([This.GetID])"
		change_variable = { which = holding_pop which = holding_pop_diff }
		set_variable = { which = holding_pop_diff value = 0 }
	}
	if = {
		limit = { 
			OR = {
				has_building = ca_town_2
				has_building = ct_marketplace_2
				has_building = tp_town_2
				has_building = tb_market_town_3
			}
		}
		change_variable = { which = holding_pop_diff value = 125 }
		log = "MAINT: Added initial holding pop of [This.holding_pop.GetValue] to [This.GetName] ([This.GetID])"
		change_variable = { which = holding_pop which = holding_pop_diff }
		set_variable = { which = holding_pop_diff value = 0 }
	}
	if = {
		limit = { 
			OR = {
				has_building = ca_town_3
				has_building = ct_marketplace_3
				has_building = tp_town_3
				has_building = tb_market_town_4
			}
		}
		change_variable = { which = holding_pop_diff value = 175 }
		log = "MAINT: Added initial holding pop of [This.holding_pop.GetValue] to [This.GetName] ([This.GetID])"
		change_variable = { which = holding_pop which = holding_pop_diff }
		set_variable = { which = holding_pop_diff value = 0 }
	}
	if = {
		limit = { 
			OR = {
				has_building = ca_town_4
				has_building = ct_marketplace_4
				has_building = tp_town_4
			}
		}
		change_variable = { which = holding_pop_diff value = 225 }
		log = "MAINT: Added initial holding pop of [This.holding_pop.GetValue] to [This.GetName] ([This.GetID])"
		change_variable = { which = holding_pop which = holding_pop_diff }
		set_variable = { which = holding_pop_diff value = 0 }
	}
	if = {
		limit = { 
			OR = {
				has_building = ca_town_5
				has_building = ct_marketplace_5
				has_building = tp_town_5
			}
		}
		change_variable = { which = holding_pop_diff value = 375 }
		log = "MAINT: Added initial holding pop of [This.holding_pop.GetValue] to [This.GetName] ([This.GetID])"
		change_variable = { which = holding_pop which = holding_pop_diff }
		set_variable = { which = holding_pop_diff value = 0 }
	}			
	if = {
		limit = { 
			OR = {
				has_building = ct_marketplace_6
				has_building = tp_town_6
			}
		}
		change_variable = { which = holding_pop_diff value = 425 }
		log = "MAINT: Added initial holding pop of [This.holding_pop.GetValue] to [This.GetName] ([This.GetID])"
		change_variable = { which = holding_pop which = holding_pop_diff }
		set_variable = { which = holding_pop_diff value = 0 }
	}
	set_title_flag = holding_has_pop
	log = "MAINT: Successfully summed holding population to [This.holding_pop.GetValue] from all town buildings"
	if = {
		limit = { holding_type = nomad }
		set_variable = { which = holding_pop value = 0 }
		log = "MAINT: Successfully zeroed holding population to [This.holding_pop.GetValue] for nomad camps"
	}
}

#Used to assign terrain variables to new holdings
arles_holding_initial_terrain_effect = {
	location = {
		if = {
			limit = { terrain = mountain } #50% slower base pop growth in mountains
			PREV = {
				set_variable = { which = holding_pop_diff_terr value = 1 }
				divide_variable = { which = holding_pop_diff_terr value = 1.5 }
				log = "MAINT: Defined terrain modifier as [This.holding_pop_diff_terr.GetValue] ([Prev.GetName])"
			}
		}
		if = {
			limit = { terrain = hills } #25% slower base pop growth in hills
			PREV = {
				set_variable = { which = holding_pop_diff_terr value = 1 }
				divide_variable = { which = holding_pop_diff_terr value = 1.25 }
				log = "MAINT: Defined terrain modifier as [This.holding_pop_diff_terr.GetValue] ([Prev.GetName])"
			}
		}
		if = {
			limit = { terrain = forest } #20% slower base pop growth in forests
			PREV = {
				set_variable = { which = holding_pop_diff_terr value = 1 }
				divide_variable = { which = holding_pop_diff_terr value = 1.20 }
				log = "MAINT: Defined terrain modifier as [This.holding_pop_diff_terr.GetValue] ([Prev.GetName])"
			}
		}
		if = {
			limit = { terrain = plains } #Standard of growth
			PREV = {
				set_variable = { which = holding_pop_diff_terr value = 1 }
				log = "MAINT: Defined terrain modifier as [This.holding_pop_diff_terr.GetValue] ([Prev.GetName])"
			}
		}
		if = {
			limit = { terrain = farmlands } #5% faster base pop growth in farmland
			PREV = {
				set_variable = { which = holding_pop_diff_terr value = 1 }
				multiply_variable = { which = holding_pop_diff_terr value = 1.05 }
				log = "MAINT: Defined terrain modifier as [This.holding_pop_diff_terr.GetValue] ([Prev.GetName])"
			}
		}
		if = {
			limit = { terrain = steppe } #20% slower base pop growth in steppes, not as much arable land
			PREV = {
				set_variable = { which = holding_pop_diff_terr value = 1 }
				divide_variable = { which = holding_pop_diff_terr value = 1.20 }
				log = "MAINT: Defined terrain modifier as [This.holding_pop_diff_terr.GetValue] ([Prev.GetName])"
			}
		}
		if = {
			limit = { terrain = desert } #35% slower base pop growth in desert
			PREV = {
				set_variable = { which = holding_pop_diff_terr value = 1 }
				divide_variable = { which = holding_pop_diff_terr value = 1.35 }
				log = "MAINT: Defined terrain modifier as [This.holding_pop_diff_terr.GetValue] ([Prev.GetName])"
			}
		}
		if = { 
			limit = { terrain = coastal_desert } #25% slower base pop growth in desert
			PREV = {
				set_variable = { which = holding_pop_diff_terr value = 1 }
				divide_variable = { which = holding_pop_diff_terr value = 1.25 }
				log = "MAINT: Defined terrain modifier as [This.holding_pop_diff_terr.GetValue] ([Prev.GetName])"
			}
		}
		if = {
			limit = { terrain = arctic } #50% slower base pop growth in arctic
			PREV = {
				set_variable = { which = holding_pop_diff_terr value = 1 }
				divide_variable = { which = holding_pop_diff_terr value = 1.50 }
				log = "MAINT: Defined terrain modifier as [This.holding_pop_diff_terr.GetValue] ([Prev.GetName])"
			}
		}
		if = {
			limit = { terrain = jungle } #35% slower base pop growth in jungle
			PREV = {
				set_variable = { which = holding_pop_diff_terr value = 1 }
				divide_variable = { which = holding_pop_diff_terr value = 1.35 }
				log = "MAINT: Defined terrain modifier as [This.holding_pop_diff_terr.GetValue] ([Prev.GetName])"
			}
		}
		if = {
			limit = { terrain = marsh } #25% slower base pop growth in marshland
			PREV = {
				set_variable = { which = holding_pop_diff_terr value = 1 }
				divide_variable = { which = holding_pop_diff_terr value = 1.25 }
				log = "MAINT: Defined terrain modifier as [This.holding_pop_diff_terr.GetValue]"
			}
		}
	}
}

#Used to assign the proper Prosperity Level modifier to holding upon population growth
arles_holding_pop_level_effect = {
	if = { #Advance to pop level 2 tribal
		limit = {
			holding_type = tribal
			NOT = { has_title_flag = clan_pop }
			check_variable = { which = holding_pop value = 74.9 }						
		}
		add_building = tb_market_town_2
		log = "MAINT: Successfully built new housing in tribal village"
		log = "MAINT: Changed tribal holding modifier to Level 2 based on holding population of [This.holding_pop.GetValue]"
		set_title_flag = clan_pop
		location = {
			set_variable = { which = province_pop_diff value = 0 }
			change_variable = { which = province_pop_diff value = 1.25 }
			multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
			change_variable = { which = province_pop which = province_pop_diff }
			log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			if = {
				limit = { 
					duchy = {
						capital_scope = {
							province = PREVPREV
							NOT = { has_province_modifier = arles_trade_node }
							check_variable = { which = province_pop value = 15 }
							PREV = { NOT = { check_variable = { which = trade_node value = 0 } } } 
						}
					} 
				}
				add_province_modifier = { name = arles_trade_node duration = -1 }
				change_variable = { which = province_econ_count_max value = 1 }
				log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) was assigned a trade node"  
			}
		}
	}
	if = { #Advance to pop level 2 civ/level 3 tribal
		limit = { 
			OR = {
				holding_type = castle
				holding_type = city
				holding_type = temple
			}
			NOT = { has_title_flag = minor_pop }
			check_variable = { which = holding_pop value = 149.9 } 
		}
		if = {
			limit = { holding_type = castle }
			add_building = ca_town_2
			log = "MAINT: Successfully built new housing in castle"
		}
		if = {
			limit = { holding_type = city }
			add_building = ct_marketplace_2
			log = "MAINT: Successfully built new housing in city"
		}
		if = {
			limit = { holding_type = temple }
			add_building = tp_town_2
			log = "MAINT: Successfully built new housing in temple"
		}
		if = {
			limit = { holding_type = tribal }
			add_building = tb_market_town_3
			log = "MAINT: Successfully built new housing in tribal village"
		}
		remove_holding_modifier = arles_holding_pop1
		add_holding_modifier = { modifier = arles_holding_pop2 duration = -1 }
		set_title_flag = minor_pop
		log = "MAINT: Changed holding modifier to Level 2 based on holding population of [This.holding_pop.GetValue]"
		location = {
			set_variable = { which = province_pop_diff value = 0 }
			change_variable = { which = province_pop_diff value = 1.75 }
			multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
			change_variable = { which = province_pop which = province_pop_diff }
			log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			if = {
				limit = { 
					duchy = {
						capital_scope = {
							province = PREVPREV
							NOT = { has_province_modifier = arles_trade_node }
							check_variable = { which = province_pop value = 15 }
							PREV = { NOT = { check_variable = { which = trade_node value = 0 } } } 
						}
					} 
				}
				add_province_modifier = { name = arles_trade_node duration = -1 }
				change_variable = { which = province_econ_count_max value = 1 }
				log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) was assigned a trade node"  
			}
		}
	}
	if = { #Advance to pop level 4 tribal
		limit = { 
			holding_type = tribal
			NOT = { has_title_flag = burg_pop }
			check_variable = { which = holding_pop value = 224.9 } 
		}
		add_building = tb_market_town_4
		log = "MAINT: Successfully built new housing in tribal village"
		remove_holding_modifier = arles_holding_pop1
		remove_holding_modifier = arles_holding_pop2
		add_holding_modifier = { modifier = arles_holding_pop4_tribal duration = -1 }
		set_title_flag = burg_pop
		log = "MAINT: Changed tribal holding modifier to Level 3 based on holding population of [This.holding_pop.GetValue]"
		location = {
			set_variable = { which = province_pop_diff value = 0 }
			change_variable = { which = province_pop_diff value = 2.0 }
			multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
			change_variable = { which = province_pop which = province_pop_diff }
			log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			if = {
				limit = { 
					duchy = {
						capital_scope = {
							province = PREVPREV
							NOT = { has_province_modifier = arles_trade_node }
							check_variable = { which = province_pop value = 15 }
							PREV = { NOT = { check_variable = { which = trade_node value = 0 } } } 
						}
					} 
				}
				add_province_modifier = { name = arles_trade_node duration = -1 }
				change_variable = { which = province_econ_count_max value = 1 }
				log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) was assigned a trade node"  
			}
		}
	}
	if = { #Advance to pop level 3 civ
		limit = { 
			OR = {
				holding_type = castle
				holding_type = city
				holding_type = temple
			}
			NOT = { has_title_flag = burg_pop }
			check_variable = { which = holding_pop value = 299.9 } 
		}
		if = {
			limit = { holding_type = castle }
			add_building = ca_town_3
			log = "MAINT: Successfully built new housing in castle"
		}
		if = {
			limit = { holding_type = city }
			add_building = ct_marketplace_3
			log = "MAINT: Successfully built new housing in city"
		}
		if = {
			limit = { holding_type = temple }
			add_building = tp_town_3
			log = "MAINT: Successfully built new housing in temple"
		}
		remove_holding_modifier = arles_holding_pop2
		add_holding_modifier = { modifier = arles_holding_pop3 duration = -1 }
		set_title_flag = burg_pop
		log = "MAINT: Changed holding modifier to Level 3 based on holding population of [This.holding_pop.GetValue]"
		location = {
			set_variable = { which = province_pop_diff value = 0 }
			change_variable = { which = province_pop_diff value = 2.25 }
			multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
			change_variable = { which = province_pop which = province_pop_diff }
			log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			if = {
				limit = { 
					duchy = {
						capital_scope = {
							province = PREVPREV
							NOT = { has_province_modifier = arles_trade_node }
							check_variable = { which = province_pop value = 15 }
							PREV = { NOT = { check_variable = { which = trade_node value = 0 } } } 
						}
					}
				}
				add_province_modifier = { name = arles_trade_node duration = -1 }
				change_variable = { which = province_econ_count_max value = 1 }
				log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) was assigned a trade node"  
			}
		}
	}
	if = { #Advance to pop level 4
		limit = { 
			OR = {
				holding_type = castle
				holding_type = city
				holding_type = temple
			}
			NOT = { has_title_flag = major_pop }
			check_variable = { which = holding_pop value = 499.9 } 
		}
		if = {
			limit = { holding_type = castle }
			add_building = ca_town_4
			log = "MAINT: Successfully built new housing in castle"
		}
		if = {
			limit = { holding_type = city }
			add_building = ct_marketplace_4
			log = "MAINT: Successfully built new housing in city"
		}
		if = {
			limit = { holding_type = temple }
			add_building = tp_town_4
			log = "MAINT: =Successfully built new housing in temple"
		}
		remove_holding_modifier = arles_holding_pop3
		add_holding_modifier = { modifier = arles_holding_pop4 duration = -1 }
		set_title_flag = major_pop
		log = "MAINT: Changed holding modifier to Level 4 based on holding population of [This.holding_pop.GetValue]"
		location = {
			set_variable = { which = province_pop_diff value = 0 }
			change_variable = { which = province_pop_diff value = 2.75 }
			multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
			change_variable = { which = province_pop which = province_pop_diff }
			log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			if = {
				limit = { 
					duchy = {
						capital_scope = {
							province = PREVPREV
							NOT = { has_province_modifier = arles_trade_node }
							check_variable = { which = province_pop value = 15 }
							PREV = { NOT = { check_variable = { which = trade_node value = 0 } } } 
						}
					}
				}
				add_province_modifier = { name = arles_trade_node duration = -1 }
				change_variable = { which = province_econ_count_max value = 1 }
				log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) was assigned a trade node"  
			}
		}
	}
	if = { #Advance to pop level 5
		limit = { 
			OR = {
				holding_type = castle
				holding_type = city
				holding_type = temple
			}
			check_variable = { which = holding_pop value = 999.9 } 
			NOT = { has_title_flag = metropolitan }
		}
		if = {
			limit = { holding_type = castle }
			add_building = ca_town_5
			log = "MAINT: Successfully built new housing in castle"
		}
		if = {
			limit = { holding_type = city }
			add_building = ct_marketplace_5
			log = "MAINT: Successfully built new housing in city"
		}
		if = {
			limit = { holding_type = temple }
			add_building = tp_town_5
			log = "MAINT: Successfully built new housing in temple"
		}
		remove_holding_modifier = arles_holding_pop4
		add_holding_modifier = { modifier = arles_holding_pop5 duration = -1 }
		set_title_flag = metropolitan
		log = "MAINT: Changed holding modifier to Level 5 based on holding population of [This.holding_pop.GetValue]"
		location = {
			set_variable = { which = province_pop_diff value = 0 }
			change_variable = { which = province_pop_diff value = 3.25 }
			multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
			change_variable = { which = province_pop which = province_pop_diff }
			log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			if = {
				limit = { 
					duchy = {
						capital_scope = {
							province = PREVPREV
							NOT = { has_province_modifier = arles_trade_node }
							check_variable = { which = province_pop value = 15 }
							PREV = { NOT = { check_variable = { which = trade_node value = 0 } } } 
						}
					}
				}
				add_province_modifier = { name = arles_trade_node duration = -1 }
				change_variable = { which = province_econ_count_max value = 1 }
				log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) was assigned a trade node"  
			}
		}
	}
}

arles_province_initial_pop_level_effect = {
	if = { #Advance to pop level 2
		limit = { 
			NOT = { has_province_flag = minor_pop }
			check_variable = { which = province_pop value = 4.9 } 
		}
		remove_province_modifier = arles_pop1
		add_province_modifier = { name = arles_pop2 duration = -1 }
		set_province_flag = minor_pop
		change_variable = { which = province_econ_count_max value = 1 }
		log = "MAINT: Changed province modifier to Level 2 based on holding population of [This.province_pop.GetValue]"
	}
	if = { #Advance to pop level 3
		limit = { 
			NOT = { has_province_flag = burg_pop }
			check_variable = { which = province_pop value = 19.9 }
		}
		remove_province_modifier = arles_pop2
		add_province_modifier = { name = arles_pop3 duration = -1 }
		set_province_flag = burg_pop
		change_variable = { which = province_econ_count_max value = 1 }
		log = "MAINT: Changed province modifier to Level 3 based on holding population of [This.province_pop.GetValue]"
	}
	if = { #Advance to pop level 4
		limit = { 
			NOT = { has_province_flag = major_pop }
			check_variable = { which = province_pop value = 34.9 }
		}
		remove_province_modifier = arles_pop3
		add_province_modifier = { name = arles_pop4 duration = -1 }
		set_province_flag = major_pop
		change_variable = { which = province_econ_count_max value = 2 }
		log = "MAINT: Changed province modifier to Level 4 based on holding population of [This.province_pop.GetValue]"
	}
	if = { #Advance to pop level 5
		limit = { 
			NOT = { has_province_flag = metropolitan }
			check_variable = { which = province_pop value = 49.9 } 
		}
		remove_province_modifier = arles_pop4
		add_province_modifier = { name = arles_pop5 duration = -1 }
		set_province_flag = metropolitan
		change_variable = { which = province_econ_count_max value = 2 }
		log = "MAINT: Changed province modifier to Level 5 based on holding population of [This.province_pop.GetValue]"
	}
}

#Used to assign the proper Prosperity Level modifier to province upon population growth
arles_province_pop_level_effect = {
	if = { #Advance to pop level 2
		limit = { 
			NOT = { has_province_flag = minor_pop }
			check_variable = { which = province_pop value = 4.9 } 
		}
		remove_province_modifier = arles_pop1
		add_province_modifier = { name = arles_pop2 duration = -1 }
		set_province_flag = minor_pop
		change_variable = { which = province_econ_count_max value = 1 }
		log = "MAINT: Changed province modifier to Level 2 based on holding population of [This.province_pop.GetValue]"
	}
	if = { #Advance to pop level 3
		limit = { 
			NOT = { has_province_flag = burg_pop }
			check_variable = { which = province_pop value = 19.9 }
		}
		remove_province_modifier = arles_pop2
		add_province_modifier = { name = arles_pop3 duration = -1 }
		set_province_flag = burg_pop
		change_variable = { which = province_econ_count_max value = 1 }
		duchy = {
			subtract_variable = { which = trade_node value = 1 }
			capital_scope = {
				if = {
					limit = { 
						OR = {
							NOT = { has_province_modifier = arles_trade_node }
							PREV = {
								any_direct_de_jure_vassal_title = {
									location = { has_province_modifier = arles_trade_node }
								}
							}
						}
						PREV = { NOT = { check_variable = { which = trade_node value = 0 } } } 
					}
					add_province_modifier = { name = arles_trade_node duration = -1 }
					change_variable = { which = province_econ_count_max value = 1 }			
					log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) was assigned a trade node"  
				}
			}
		}
		log = "MAINT: Changed province modifier to Level 3 based on holding population of [This.province_pop.GetValue]"
	}
	if = { #Advance to pop level 4
		limit = { 
			NOT = { has_province_flag = major_pop }
			check_variable = { which = province_pop value = 34.9 }
		}
		remove_province_modifier = arles_pop3
		add_province_modifier = { name = arles_pop4 duration = -1 }
		set_province_flag = major_pop
		change_variable = { which = province_econ_count_max value = 2 }
		duchy = {
			subtract_variable = { which = trade_node value = 1 }
			capital_scope = {
				if = {
					limit = {
						OR = {
							NOT = { has_province_modifier = arles_trade_node }
							PREV = {
								any_direct_de_jure_vassal_title = {
									location = { has_province_modifier = arles_trade_node }
								}
							}
						}
						PREV = { NOT = { check_variable = { which = trade_node value = 0 } } } 
					}
					add_province_modifier = { name = arles_trade_node duration = -1 }
					change_variable = { which = province_econ_count_max value = 1 }
					log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) was assigned a trade node"  
				}
			}
		}
		log = "MAINT: Changed province modifier to Level 4 based on holding population of [This.province_pop.GetValue]"
	}
	if = { #Advance to pop level 5
		limit = { 
			NOT = { has_province_flag = metropolitan }
			check_variable = { which = province_pop value = 49.9 } 
		}
		remove_province_modifier = arles_pop4
		add_province_modifier = { name = arles_pop5 duration = -1 }
		set_province_flag = metropolitan
		change_variable = { which = province_econ_count_max value = 2 }
		duchy = {
			subtract_variable = { which = trade_node value = 1 }
			capital_scope = {
				if = {
					limit = { 
						OR = {
							NOT = { has_province_modifier = arles_trade_node }
							PREV = {
								any_direct_de_jure_vassal_title = {
									location = { has_province_modifier = arles_trade_node }
								}
							}
						}
						PREV = { NOT = { check_variable = { which = trade_node value = 0 } } } 
					}
					add_province_modifier = { name = arles_trade_node duration = -1 }
					change_variable = { which = province_econ_count_max value = 1 }
					log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) was assigned a trade node"  
				}
			}
		}
		log = "MAINT: Changed province modifier to Level 5 based on holding population of [This.province_pop.GetValue]"
	}
}

#Used to assign the proper Prosperity Level modifier to holding upon population decline
arles_holding_pop_level_decline_effect = {
	if = { #Devolve to tribal pop level 1
		limit = {
			holding_type = tribal
			has_title_flag = clan_pop
			NOT = { check_variable = { which = holding_pop value = 74.9 } }
		}
		remove_building = tb_market_town_2
		log = "MAINT: Tribal level 2 housing destroyed in [This.GetName] ([This.GetID])"
		clr_title_flag = clan_pop
		log = "MAINT: Devolved holding modifier to Level 1 based on holding population of [This.holding_pop.GetValue]"
		location = {
			set_variable = { which = province_pop_diff value = 0 }
			subtract_variable = { which = province_pop_diff value = 1.25 }
			multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
			change_variable = { which = province_pop which = province_pop_diff }
			log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			if = {
				limit = { 
					NOT = { check_variable = { which = province_pop value = 15 } }
					has_province_modifier = arles_trade_node
				}
				remove_province_modifier = arles_trade_node
				subtract_variable = { which = province_econ_count_max value = 1 }
				log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) lost a trade node" 
			}
		}
	}
	if = { #Devolve to pop level 1/pop level 2 tribal
		limit = {
			check_variable = { which = holding_pop value = 74.9 }
			NOT = { check_variable = { which = holding_pop value = 149.9 } }
			has_title_flag = minor_pop
		}
		if = {
			limit = { holding_type = castle }
			remove_building = ca_town_2
			log = "MAINT: Level 2 housing destroyed in [This.GetName] ([This.GetID])"
		}
		if = {
			limit = { holding_type = city }
			remove_building = ct_marketplace_2
			log = "MAINT: Level 2 housing destroyed in [This.GetName] ([This.GetID])"
		}
		if = {
			limit = { holding_type = temple }
			remove_building = tp_town_2
			log = "MAINT: Level 2 housing destroyed in [This.GetName] ([This.GetID])"
		}
		if = {
			limit = { holding_type = tribal }
			remove_building = tb_market_town_3
			log = "MAINT: Level 3 housing destroyed in [This.GetName] ([This.GetID])"
		}
		remove_holding_modifier = arles_holding_pop2
		add_holding_modifier = { modifier = arles_holding_pop1 duration = -1 }
		clr_title_flag = minor_pop
		log = "MAINT: Devolved holding modifier to Level 1 based on holding population of [This.holding_pop.GetValue]"
		location = {
			set_variable = { which = province_pop_diff value = 0 }
			subtract_variable = { which = province_pop_diff value = 1.75 }
			multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
			change_variable = { which = province_pop which = province_pop_diff }
			log = "MAINT:Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			if = {
				limit = { 
					NOT = { check_variable = { which = province_pop value = 15 } }
					has_province_modifier = arles_trade_node
				}
				remove_province_modifier = arles_trade_node
				subtract_variable = { which = province_econ_count_max value = 1 }
				log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) lost a trade node" 
			}
		}
	}
	if = { #Devolve to pop level 2 civ
		limit = { 
			OR = {
				holding_type = castle
				holding_type = city
				holding_type = temple
			}
			has_title_flag = burg_pop
			check_variable = { which = holding_pop value = 149.9 } 
			NOT = { check_variable = { which = holding_pop value = 299.9 } }
		}
		if = {
			limit = { holding_type = castle }
			remove_building = ca_town_3
			log = "MAINT: Level 3 housing destroyed in [This.GetName] ([This.GetID])"
		}
		if = {
			limit = { holding_type = city }
			remove_building = ct_marketplace_3
			log = "MAINT: Level 3 housing destroyed in [This.GetName] ([This.GetID])"
		}
		if = {
			limit = { holding_type = temple }
			remove_building = tp_town_3
			log = "MAINT: Level 3 housing destroyed in [This.GetName] ([This.GetID])"
		}
		remove_holding_modifier = arles_holding_pop3
		add_holding_modifier = { modifier = arles_holding_pop2 duration = -1 }
		clr_title_flag = burg_pop
		log = "MAINT: Devolved holding modifier to Level 2 based on holding population of [This.holding_pop.GetValue]"
		location = {
			set_variable = { which = province_pop_diff value = 0 }
			subtract_variable = { which = province_pop_diff value = 2.25 }
			multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
			change_variable = { which = province_pop which = province_pop_diff }
			log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			if = {
				limit = { 
					NOT = { check_variable = { which = province_pop value = 15 } }
					has_province_modifier = arles_trade_node
				}
				remove_province_modifier = arles_trade_node
				subtract_variable = { which = province_econ_count_max value = 1 }
				log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) lost a trade node" 
			}
		}
	}
	if = { #Devolve to pop level 3 tribal
		limit = { 
			holding_type = tribal
			has_title_flag = burg_pop
			check_variable = { which = holding_pop value = 149.9 } 
			NOT = { check_variable = { which = holding_pop value = 224.9 } }
		}
		remove_building = tb_market_town_4
		log = "MAINT: Level 4 housing destroyed in [This.GetName] ([This.GetID])"
		remove_holding_modifier = arles_holding_pop4_tribal
		add_holding_modifier = { modifier = arles_holding_pop2 duration = -1 }
		clr_title_flag = burg_pop
		log = "MAINT: Changed tribal holding modifier to Level 3 based on holding population of [This.holding_pop.GetValue]"
		location = {
			set_variable = { which = province_pop_diff value = 0 }
			subtract_variable = { which = province_pop_diff value = 2.0 }
			multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
			change_variable = { which = province_pop which = province_pop_diff }
			log = "Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			if = {
				limit = { 
					NOT = { check_variable = { which = province_pop value = 15 } }
					has_province_modifier = arles_trade_node
				}
				remove_province_modifier = arles_trade_node
				subtract_variable = { which = province_econ_count_max value = 1 }
				log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) lost a trade node" 
			}
		}
	}
	if = { #Devolve to pop level 3
		limit = { 
			OR = {
				holding_type = castle
				holding_type = city
				holding_type = temple
			}
			has_title_flag = major_pop
			check_variable = { which = holding_pop value = 299.9 } 
			NOT = { check_variable = { which = holding_pop value = 499.9 } }
		}
		if = {
			limit = { holding_type = castle }
			remove_building = ca_town_4
			log = "MAINT: Level 4 housing destroyed in [This.GetName] ([This.GetID])"
		}
		if = {
			limit = { holding_type = city }
			remove_building = ct_marketplace_4
			log = "MAINT: Level 4 housing destroyed in [This.GetName] ([This.GetID])"
		}
		if = {
			limit = { holding_type = temple }
			remove_building = tp_town_4
			log = "MAINT: Level 4 housing destroyed in [This.GetName] ([This.GetID])"
		}
		remove_holding_modifier = arles_holding_pop4
		add_holding_modifier = { modifier = arles_holding_pop3 duration = -1 }
		clr_title_flag = major_pop
		log = "MAINT: Changed holding modifier to Level 3 based on holding population of [This.holding_pop.GetValue]"
		location = {
			set_variable = { which = province_pop_diff value = 0 }
			subtract_variable = { which = province_pop_diff value = 2.75 }
			multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
			change_variable = { which = province_pop which = province_pop_diff }
			log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			if = {
				limit = { 
					NOT = { check_variable = { which = province_pop value = 15 } }
					has_province_modifier = arles_trade_node
				}
				remove_province_modifier = arles_trade_node
				subtract_variable = { which = province_econ_count_max value = 1 }
				log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) lost a trade node" 
			}
		}
	}
	if = { #Devolve to pop level 4
		limit = { 
			OR = {
				holding_type = castle
				holding_type = city
				holding_type = temple
			}
			has_title_flag = metropolitan
			check_variable = { which = holding_pop value = 499.9 } 
			NOT = { check_variable = { which = holding_pop value = 999.9 } }
		}
		if = {
			limit = { holding_type = castle }
			remove_building = ca_town_5
			log = "MAINT: Level 5 housing destroyed in [This.GetName] ([This.GetID])"
		}
		if = {
			limit = { holding_type = city }
			remove_building = ct_marketplace_5
			log = "MAINT: Level 5 housing destroyed in [This.GetName] ([This.GetID])"
		}
		if = {
			limit = { holding_type = temple }
			remove_building = tp_town_5
			log = "MAINT: Level 5 housing destroyed in [This.GetName] ([This.GetID])"
		}
		remove_holding_modifier = arles_holding_pop5
		add_holding_modifier = { modifier = arles_holding_pop4 duration = -1 }
		clr_title_flag = metropolitan
		log = "MAINT: Devolved holding modifier to Level 4 based on holding population of [This.holding_pop.GetValue]"
		location = {
			set_variable = { which = province_pop_diff value = 0 }
			subtract_variable = { which = province_pop_diff value = 3.25 }
			multiply_variable = { which = province_pop_diff_terr which = province_pop_diff }
			change_variable = { which = province_pop which = province_pop_diff }
			log = "MAINT: Changed province pop in [This.GetName] ([This.GetID]) to [This.province_pop.GetValue] by [This.province_pop_diff.GetValue]"
			if = {
				limit = { 
					NOT = { check_variable = { which = province_pop value = 15 } }
					has_province_modifier = arles_trade_node
				}
				remove_province_modifier = arles_trade_node
				subtract_variable = { which = province_econ_count_max value = 1 }
				log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) lost a trade node" 
			}
		}
	}
}

#Used to assign the proper Prosperity Level modifier to province upon population decline
arles_province_pop_level_decline_effect = {
	if = { #Devolve to pop level 1
		limit = { 
			has_province_flag = minor_pop
			NOT = { check_variable = { which = province_pop value = 4.9 } }
		}
		remove_province_modifier = arles_pop2
		add_province_modifier = { name = arles_pop1 duration = -1 }
		clr_province_flag = minor_pop
		subtract_variable = { which = province_econ_count_max value = 1 }
		log = "MAINT: Devolved province modifier to Level 1 based on holding population of [This.province_pop.GetValue]"
		if = {
			limit = { 
				has_province_modifier = arles_trade_node
			}
			remove_province_modifier = arles_trade_node
			subtract_variable = { which = province_econ_count_max value = 1 }
			log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) lost a trade node"  
		}
	}
	if = { #Devolve to pop level 2
		limit = { 
			has_province_flag = burg_pop
			check_variable = { which = province_pop value = 4.9 }
			NOT = { check_variable = { which = province_pop value = 19.9 } }
		}
		remove_province_modifier = arles_pop3
		add_province_modifier = { name = arles_pop2 duration = -1 }
		clr_province_flag = burg_pop
		subtract_variable = { which = province_econ_count_max value = 1 }
		log = "MAINT: Devolved province modifier to Level 2 based on holding population of [This.province_pop.GetValue]" 
		duchy = {
			change_variable = { which = trade_node value = 1 }
			capital_scope = {
				if = {
					limit = { 
						has_province_modifier = arles_trade_node
						PREV = { check_variable = { which = trade_node value = 0.5 } } 
					}
					remove_province_modifier = arles_trade_node
					subtract_variable = { which = province_econ_count_max value = 1 }
					log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) lost a trade node"
				}						
			}
		}
	}
	if = { #Devolve to pop level 3
		limit = { 
			has_province_flag = major_pop
			check_variable = { which = province_pop value = 19.9 }
			NOT = { check_variable = { which = province_pop value = 34.9 } }
		}
		remove_province_modifier = arles_pop4
		add_province_modifier = { name = arles_pop3 duration = -1 }
		clr_province_flag = major_pop
		subtract_variable = { which = province_econ_count_max value = 1 }
		log = "MAINT: Devolved province modifier to Level 3 based on holding population of [This.province_pop.GetValue]"
		duchy = {
			change_variable = { which = trade_node value = 1 }
		}
	}
	if = { #Devolve to pop level 4
		limit = {
			has_province_flag = metropolitan
			check_variable = { which = province_pop value = 34.9 }
			NOT = { check_variable = { which = province_pop value = 49.9 } }
		}
		remove_province_modifier = arles_pop5
		add_province_modifier = { name = arles_pop4 duration = -1 }
		clr_province_flag = metropolitan
		subtract_variable = { which = province_econ_count_max value = 1 }
		log = "MAINT: Devolved province modifier to Level 4 based on holding population of [This.province_pop.GetValue]" 
		duchy = {
			change_variable = { which = trade_node value = 1 }
		}
	}
}