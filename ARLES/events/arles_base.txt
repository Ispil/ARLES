#Seeding Provinces with Base Resources/Trade Zones/Prosperity
#Enacted through Isis to make sure modifiers are set before D-Day

namespace = arles_base

#arles_base.0
#
#Initial randomisation event
character_event = {
	id = arles_base.0
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			NOT = { has_global_flag = genesis } #Start case
			any_independent_ruler = { # Recursive case
				has_character_flag = base_seed
			}
		}
	}
	
	immediate = {
		random_list = { #Advance random seed
			50 = { if = { limit = { always = yes } } } #Fool the engine
			50 = { }
		}
	}
	
	option = {
		name = OK
		if = {
			limit = { NOT = { has_global_flag = genesis } }
			set_global_flag = genesis
			save_event_target_as = verbum
			set_variable = { which = amber_gaia value = 0 }
			set_variable = { which = ivory_gaia value = 0 }
			set_variable = { which = gold_gaia value = 0 }
			any_independent_ruler = { # Setup recursion state
				set_character_flag = base_seed
			}
		}
		
		# Following the example set in emf.rr, we'll have to use recursive events rather than just any_province.  For this event, we will recurse once for each independent ruler in the game and seed their demesne provinces, then use similar strategies to handle their vassals' demesnes.
		
		if = {
			limit  = { has_global_flag = genesis }
			# Select a random independent realm to begin seeding
			random_independent_ruler = {
				limit = { has_character_flag = base_seed }
				character_event = { id = arles_base.1 } # Randomize realm
			}
		}
		
		repeat_event = { id = arles_base.0 } #Recurse
	}
}

# arles_base.1
# Randomize independent realm
#
# ROOT = independent ruler
# FROM = Isis
character_event = {
	id = arles_base.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_character_flag = base_seed #Start
			any_realm_lord = { #Recurse
				has_character_flag = seed_demesne
			}
		}
	}
	
	immediate = {
		random_list = { #Advance random seed
			50 = { if = { limit = { always = yes } } } #Fool the engine
			50 = { }
		}
	}
	
	option = {
		name = OK
		
		if = {
			limit = { has_character_flag = base_seed } #Start case
			clr_character_flag = base_seed
			
			# First, randomize the top liege's demesne
			set_character_flag = seed_demesne
			character_event = { id = arles_base.2 }
			
			# Set realm lords' demesnes which we will randomize. Limit at count-level to catch all
			# provinces, ideally.
			
			any_realm_lord = {
				limit = { higher_tier_than = baron }
				set_character_flag = seed_demesne
			}
		}
		
		if = {
			limit = { NOT = { has_character_flag = base_seed } } #Recursive case
			# Select a ruler and randomize his court
			random_realm_lord = {
				limit = { has_character_flag = seed_demesne }
				character_event = { id = arles_base.2 }
			}
		}
		
		# Recurse
		repeat_event = { id = arles_base.1 }
	}
}

# arles_base.2
# Recursion coherency unit
#
# ROOT = ruler
# FROM = top_liege
character_event = {
	id = arles_base.2
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_list = { #Advance random seed
			50 = { if = { limit = { always = yes } } } #Fool the engine
			50 = { }
		}
	}
	
	option = {
		name = OK
		
		if = {
			limit = { has_character_flag = seed_demesne } #Start case
			clr_character_flag = seed_demesne
			
			character_event = { id = arles_base.3 } # Randomize province
		}
	}
}

#arles_base.3
#Character to province conversion
#
#ROOT = ruler
character_event = {
	id = arles_base.3
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		any_demesne_province = {
			NOT = { has_province_flag = init_province_pop }
			NOT = { has_province_flag = dixitquedeus }
		} 
	}
	
	immediate = {
		random_list = { #Advance random seed
			50 = { if = { limit = { always = yes } } } #Fool the engine
			50 = { }
		}
	}
	
	option = {
		name = OK
		random_demesne_province = {
			limit = { NOT = { has_province_flag = init_province_pop } }
			save_event_target_as = home_province
			
			#BEGIN PROVINCE POPULATION MODIFIERS
			if = { 
				limit = { 
					event_target:home_province = { 
						NOT = { has_province_flag = dixitquedeus }
						log = "DEBUG arles_base.3 Identified home_province as [This.GetName] ([This.GetID])"
					}
				}
				add_province_modifier = { name = arles_pop1 duration = -1 } #Population level 1
				set_variable = { which = province_pop value = 0 } #Province population level counter
				set_variable = { which = province_pop_diff value = 0 } #Aggregate Population level diff 
				set_variable = { which = province_pop_diff_terr value = 0 } #Population level diff (terrain component)
				set_variable = { which = province_econ_count value = 0 } #Count of economic improvements
				set_variable = { which = province_econ_count_max value = 1 }  #Count of max possible economic improvements
				set_variable = { which = province_econ_count_diff value = 1 } #Diff used for accounting how many remaining slots
				log = "MAINT: arles_base.3 Successfully set up province defines in [This.GetName] ([This.GetID])"
				set_province_flag = init_province_pop
				#Historical Capital
				if = { 
					limit = { num_of_settlements = 5 }
					set_province_flag = historical_capital
				}
			}
		}
		character_event = { id = arles_base.4 } #Set up holdings
		
		character_event = { id = arles_base.5 } #Finish processing provincial level
		character_event = { id = arles_base.12 days = 1 } #Initiate trade node seeding
		
		repeat_event = { id = arles_base.3 } #Recurse
	}
}

#arles_base.4
#Seeding holdings in provinces
#
#event_target:home_province = Province being seeded
character_event = {
	id = arles_base.4
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			event_target:home_province = { has_province_flag = init_province_pop } #start case
			event_target:home_province = { #recursive case
				any_province_holding = { NOT = { has_title_flag = holding_has_pop } }
			}
		}
	}
	
	immediate = {
		random_list = { #Advance random seed
			50 = { if = { limit = { always = yes } } } #Fool the engine
			50 = { }
		}
	}
	
	option = {
		name = "OK"
		event_target:home_province = {
			clr_province_flag = init_province_pop
			#BEGIN HOLDING POPULATION LEVEL ASSIGNMENT
			random_province_holding = {
				limit = { NOT = { has_title_flag = holding_has_pop } }
				#BEGIN INITIAL HOLDING VARIABLE SETUP
				arles_holding_initial_setup_effect = yes
				log = "MAINT: arles.base.4 Beginning processing of [This.GetName], Barony [This.GetID]"
				
				#BEGIN ADDING PRIMARY POPS IF NEEDED
				arles_holding_initial_pop_building_effect = yes
				
				#BEGIN TECH-POP CONVERSION STATE (CASTLES)
				#Level 2
				if = {
					limit = { holding_type = castle }
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 2.0 }
						random = {
							chance = 30
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 2.2 }
						random = {
							chance = 30
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 2.4 }
						random = {
							chance = 30
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 2.6 }
						random = {
							chance = 30
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 2.8 }
						random = {
							chance = 30
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 3.0 }
						random = {
							chance = 30
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in castle"
						}
					}
				}
				#Level 3
				if = {
					limit = { holding_type = castle }
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 2.2 }
						random = {
							chance = 15
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 2.4 }
						random = {
							chance = 15
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 2.6 }
						random = {
							chance = 15
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 2.8 }
						random = {
							chance = 15
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 3.0 }
						random = {
							chance = 15
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 3.2 }
						random = {
							chance = 15
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in castle"
						}
					}
				}
				#Level 4
				if = {
					limit = { holding_type = castle }
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 3.2 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.5
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 3.4 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.5
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 3.6 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.5
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 3.8 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.5
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 4.0 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.5
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 4.2 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.5
								any_neighbor_province = {
									any_province_holding = {
										has_building = ca_town_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ca_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in castle"
						}
					}
				}
				#Level 5
				if = {
					limit = { holding_type = castle }
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 5.2 }
						random = {
							chance = 2.5
							add_building = ca_town_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 5.4 }
						random = {
							chance = 2.5
							add_building = ca_town_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 5.6 }
						random = {
							chance = 2.5
							add_building = ca_town_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 5.8 }
						random = {
							chance = 2.5
							add_building = ca_town_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 6.0 }
						random = {
							chance = 2.5
							add_building = ca_town_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in castle"
						}
					}
					if = { 
						limit = { TECH_CASTLE_CONSTRUCTION = 6.2 }
						random = {
							chance = 2.5
							add_building = ca_town_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in castle"
						}
					}
				}
				
				#BEGIN TECH-POP CONVERSION STATE (CITIES)
				#Level 2
				if = {
					limit = { holding_type = city }
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 1.4 }
						random = {
							chance = 30
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 1.6 }
						random = {
							chance = 30
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 1.8 }
						random = {
							chance = 30
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 2.0 }
						random = {
							chance = 30
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 2.2 }
						random = {
							chance = 30
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 2.4 }
						random = {
							chance = 30
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in city"
						}
					}
				}
				#Level 3
				if = {
					limit = { holding_type = city }
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 2.2 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 2.4 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 2.6 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 2.8 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.0 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.2 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in city"
						}
					}
				}
				#Level 4
				if = {
					limit = { holding_type = city }
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.2 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.5
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.4 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.5
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.6 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.5
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.8 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.5
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 4.0 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.5
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 4.2 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.5
								any_neighbor_province = {
									any_province_holding = {
										has_building = ct_marketplace_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = ct_marketplace_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in city"
						}
					}
				}
				#Level 5
				if = {
					limit = { holding_type = city }
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 5.2 }
						random = {
							chance = 5
							add_building = ct_marketplace_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 5.4 }
						random = {
							chance = 5
							add_building = ct_marketplace_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 5.6 }
						random = {
							chance = 5
							add_building = ct_marketplace_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 5.8 }
						random = {
							chance = 5
							add_building = ct_marketplace_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 6.0 }
						random = {
							chance = 5
							add_building = ct_marketplace_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in city"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 6.2 }
						random = {
							chance = 5
							add_building = ct_marketplace_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in city"
						}
					}
				}
				
				#BEGIN TECH-POP CONVERSION (TEMPLES)
				#Level 2
				if = {
					limit = { holding_type = temple }
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 1.6 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 1.8 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 2.0 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 2.2 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 2.4 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 2.6 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_2
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in temple"
						}
					}
				}
				#Level 3
				if = {
					limit = { holding_type = temple }
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 2.2 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 2.4 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 2.6 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 2.8 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 3.0 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 3.2 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_3
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in temple"
						}
					}
				}
				#Level 4
				if = {
					limit = { holding_type = temple }
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 3.2 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.25
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 3.4 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.25
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 3.6 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.25
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 3.8 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.25
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 4.0 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.25
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 4.2 }
						random = {
							chance = 7.5
							modifier = {
								factor = 1.25
								any_neighbor_province = {
									any_province_holding = {
										has_building = tp_town_4
									}
								}
							}
							modifier = {
								factor = 3
								location = {
									has_province_flag = historical_capital
								}
							}	
							add_building = tp_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in temple"
						}
					}
				}
				#Level 5
				if = {
					limit = { holding_type = temple }
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 5.2 }
						random = {
							chance = 2.5
							add_building = tp_town_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 5.4 }
						random = {
							chance = 2.5
							add_building = tp_town_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 5.6 }
						random = {
							chance = 2.5
							add_building = tp_town_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 5.8 }
						random = {
							chance = 2.5
							add_building = tp_town_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 6.0 }
						random = {
							chance = 2.5
							add_building = tp_town_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in temple"
						}
					}
					if = { 
						limit = { TECH_TEMPLE_CONSTRUCTION = 6.2 }
						random = {
							chance = 2.5
							add_building = tp_town_5
							log = "DEBUG arles_base.4 Successfully built level 5 housing in temple"
						}
					}
				}
				
				#BEGIN TECH-POP CONVERSION (TRIBES)
				#Level 2
				if = {
					limit = { holding_type = tribal }
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 1.5 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_2
									}
								}
							}
							add_building = tb_market_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 1.7 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_2
									}
								}
							}
							add_building = tb_market_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 1.9 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_2
									}
								}
							}
							add_building = tb_market_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 2.1 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_2
									}
								}
							}
							add_building = tb_market_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 2.3 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_2
									}
								}
							}
							add_building = tb_market_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 2.5 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_2
									}
								}
							}
							add_building = tb_market_town_2
							log = "DEBUG arles_base.4 Successfully built level 2 housing in tribe"
						}
					}
				}
				#Level 3
				if = {
					limit = { holding_type = tribal }
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.0 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_3
									}
								}
							}
							add_building = tb_market_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.2 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_3
									}
								}
							}
							add_building = tb_market_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.4 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_3
									}
								}
							}
							add_building = tb_market_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.6 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_3
									}
								}
							}
							add_building = tb_market_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.8 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_3
									}
								}
							}
							add_building = tb_market_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 4.0 }
						random = {
							chance = 20
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_3
									}
								}
							}
							add_building = tb_market_town_3
							log = "DEBUG arles_base.4 Successfully built level 3 housing in tribe"
						}
					}
				}
				#Level 4
				if = {
					limit = { holding_type = tribal }
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.5 }
						random = {
							chance = 15
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_4
									}
								}
							}
							add_building = tb_market_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.7 }
						random = {
							chance = 15
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_4
									}
								}
							}
							add_building = tb_market_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 3.9 }
						random = {
							chance = 15
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_4
									}
								}
							}
							add_building = tb_market_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 4.1 }
						random = {
							chance = 15
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_4
									}
								}
							}
							add_building = tb_market_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 4.3 }
						random = {
							chance = 15
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_4
									}
								}
							}
							add_building = tb_market_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in tribe"
						}
					}
					if = { 
						limit = { TECH_CITY_CONSTRUCTION = 4.5 }
						random = {
							chance = 15
							modifier = {
								factor = 2
								any_neighbor_province = {
									any_province_holding = {
										has_building = tb_market_town_4
									}
								}
							}
							add_building = tb_market_town_4
							log = "DEBUG arles_base.4 Successfully built level 4 housing in tribe"
						}
					}
				}
				
				#BEGIN HOLDING-POP CONVERSION
				arles_holding_initial_pop_level_effect = yes
					
				#BEGIN TERRAIN POP GROWTH CONSTANTS
				arles_holding_initial_terrain_effect = yes 
				
				#POPULATION - TERRAIN MODIFIERS
				multiply_variable = { which = holding_pop which = holding_pop_diff_terr }
				log = "MAINT: arles_base.4 Successfully summed holding population to [This.holding_pop.GetValue] after applying terrain modifiers"		

				#BEGIN POPULATION LEVEL ASSIGNMENT
				arles_holding_pop_level_effect = yes
				log = "MAINT: arles_base.4 Reached end of holding population calculations"
			}
		}
		repeat_event = { id = arles_base.4 }
		log = "MAINT: arles_base.4 Initiated recursion"
	}
}

#arles_base.5
#Finishing up province setup
character_event = {
	id = arles_base.5
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		any_demesne_province = {
			NOT = { has_province_flag = dixitquedeus }
		}
	}
	
	immediate = {
		random_list = { #Advance random seed
			50 = { if = { limit = { always = yes } } } #Fool the engine
			50 = { }
		}
	}
	
	option = {
		name = "OK"
		event_target:home_province = {
			if = {
				limit = { NOT = { has_province_flag = dixitquedeus } }
				set_province_flag = dixitquedeus
				log = "MAINT: arles_base.5 Beginning processing of [This.GetName], Province [This.GetID]"
			
				#BEGIN TERRAIN POP GROWTH CONSTANTS
				if = {
					limit = { terrain = mountain } #50% slower base pop growth in mountains
					set_variable = { which = province_pop_diff_terr value = 1 }
					divide_variable = { which = province_pop_diff_terr value = 1.5 }
				}
				if = {
					limit = { terrain = hills } #25% slower base pop growth in hills
					set_variable = { which = province_pop_diff_terr value = 1 }
					divide_variable = { which = province_pop_diff_terr value = 1.25 }
				}
				if = {
					limit = { terrain = forest } #20% slower base pop growth in forests
					set_variable = { which = province_pop_diff_terr value = 1 }
					divide_variable = { which = province_pop_diff_terr value = 1.20 }
				}
				if = {
					limit = { terrain = plains } #Standard of growth
					set_variable = { which = province_pop_diff_terr value = 1 }
				}
				if = {
					limit = { terrain = farmlands } #5% faster base pop growth in farmland
					set_variable = { which = province_pop_diff_terr value = 1 }
					multiply_variable = { which = province_pop_diff_terr value = 1.05 }
				}
				if = {
					limit = { terrain = steppe } #20% slower base pop growth in steppes, not as much arable land
					set_variable = { which = province_pop_diff_terr value = 1 }
					divide_variable = { which = province_pop_diff_terr value = 1.20 }
				}
				if = {
					limit = { terrain = desert } #35% slower base pop growth in desert
					set_variable = { which = province_pop_diff_terr value = 1 }
					divide_variable = { which = province_pop_diff_terr value = 1.35 }
				}
				if = { 
					limit = { terrain = coastal_desert } #25% slower base pop growth in desert
					set_variable = { which = province_pop_diff_terr value = 1 }
					divide_variable = { which = province_pop_diff_terr value = 1.25 }
				}
				if = {
					limit = { terrain = arctic } #50% slower base pop growth in arctic
					set_variable = { which = province_pop_diff_terr value = 1 }
					divide_variable = { which = province_pop_diff_terr value = 1.5 }
				}
				if = {
					limit = { terrain = jungle } #35% slower base pop growth in jungle
					set_variable = { which = province_pop_diff_terr value = 1 }
					divide_variable = { which = province_pop_diff_terr value = 1.35 }
				}
				if = {
					limit = { terrain = marsh } #25% slower base pop growth in marshland
					set_variable = { which = province_pop_diff_terr value = 1 }
					divide_variable = { which = province_pop_diff_terr value = 1.25 }
				}
				log = "MAINT: arles_base.5 Report province population as [This.province_pop.GetValue] before applying terrain modifier"
				
				#POPULATION - TERRAIN MODIFIERS
				multiply_variable = { which = province_pop which = province_pop_diff_terr }
				log = "MAINT: arles_base.5 Readjusted province using terrain modifier of [This.province_pop_diff_terr.GetValue] to [This.province_pop.GetValue]"
				
					
				#POPULATION - GOVERNMENT MODIFIERS
				if = { #Reduce province pop by 25% if subordinate to tribal
					limit = {
						capital_holding = { holding_type = tribal }
					}
					multiply_variable = { which = province_pop value = 0.75 }
					log = "MAINT: arles_base.5 Readjusted province population to [This.province_pop.GetValue] due to tribal overlord"
				}
				if = { #Reduce province pop by 50% if subordinate to nomads
					limit = {
						capital_holding = { holding_type = nomad }
					}
					multiply_variable = { which = province_pop value = 0.5 }
					log = "MAINT: arles_base.5 Readjusted province population to [This.province_pop.GetValue] due to nomad overlord"
				}
				if = { #Reduce province pop by 100% if only nomads
					limit = {
						capital_holding = { holding_type = nomad }
						NOT = { any_province_holding = { NOT = { holding_type = nomad } } }
					}
					set_variable = { which = province_pop value = 0 }
					log = "MAINT: arles_base.5 Zeroed out province population to [This.province_pop.GetValue] due to nomad overlord of empty province"
				}
				
				#BEGIN POPULATION LEVEL ASSIGNMENT
				arles_province_initial_pop_level_effect = yes
					
				#BEGIN SEED RESOURCES
				if = {
					limit = { 
						OR = {
							port = yes
							borders_lake = yes
						}
					}
					random = {
						chance = 33
						add_province_modifier = { name = arles_fishing duration = -1 }
						log = "MAINT: arles_base.5 Added Fish to province"
					}
				}
				if = {
					limit = { terrain = arctic } #Furs and Game
					random = {
						chance = 33
						add_province_modifier = { name = arles_furs duration = -1 }
						log = "MAINT: arles_base.5 Added Furs to province"
					}
					random = {
						chance = 25
						add_province_modifier = { name = arles_game duration = -1 }
						log = "MAINT: arles_base.5 Added Game to province"
					}
				}
				if = {
					limit = { terrain = mountain } #Silver, Stone, and Minerals
					random = {
						chance = 15
						add_province_modifier = { name = arles_silver duration = -1 }
						log = "MAINT: arles_base.5 Added Silver to province"
					}
					random = {
						chance = 33
						add_province_modifier = { name = arles_stone duration = -1 }
						log = "MAINT: arles_base.5 Added Stone to province"
					}
					random = {
						chance = 33
						add_province_modifier = { name = arles_minerals duration = -1 }
						log = "MAINT: arles_base.5 Added Minerals to province"
					}
				}
				if = {
					limit = { terrain = hills } #Silver, Stone, and Minerals
					random = {
						chance = 10
						add_province_modifier = { name = arles_silver duration = -1 }
						log = "MAINT: arles_base.5 Added Silver to province"
					}
					random = {
						chance = 33 
						add_province_modifier = { name = arles_stone duration = -1 }
						log = "MAINT: arles_base.5 Added Stone to province"
					}
					random = {
						chance = 33
						add_province_modifier = { name = arles_minerals duration = -1 }
						log = "MAINT: arles_base.5 Added Minerals to province"
					}
					random = {
						chance = 5
						set_province_flag = undiscovered_gems
						log = "MAINT: arles_base.5 Added Undiscovered Gems to province"
					}
				}
				if = {
					limit = { terrain = forest } #Game and Minerals
					random = {
						chance = 33
						add_province_modifier = { name = arles_game duration = -1 }
						log = "MAINT: arles_base.5 Added Game to province"
					}
					random = {
						chance = 15
						add_province_modifier = { name = arles_minerals duration = -1 }
						log = "MAINT: arles_base.5 Added Minerals to province"
					}
				}
				if = {
					limit = { terrain = farmlands } #Fertile Soil and Pastureland
					random = {
						chance = 75
						add_province_modifier = { name = arles_fertile duration = -1 }
						log = "MAINT: arles_base.5 Added Farmland to province"
					}
					random = {
						chance = 75	
						add_province_modifier = { name = arles_pasture duration = -1 }
						log = "MAINT: arles_base.5 Added Pasture to province"
					}
				}
				if = {
					limit = { terrain = plains } #Fertile Soil and Pastureland
					random = {
						chance = 33
						add_province_modifier = { name = arles_pasture duration = -1 }
						log = "MAINT: arles_base.5 Added Pasture to province"
					}
					random = {
						chance = 25
						add_province_modifier = { name = arles_fertile duration = -1 }
						log = "MAINT: arles_base.5 Added Farmland to province"
					}
					if = { #Silver or Minerals from the rivers
						limit = { borders_major_river = yes }
						random = {
							chance = 5
							add_province_modifier = { name = arles_silver duration = -1 }
							log = "MAINT: arles_base.5 Added Silver to province"
						}
						random = {
							chance = 20
							add_province_modifier = { name = arles_minerals duration = -1 }
							log = "MAINT: arles_base.5 Added Minerals to province"
						}
					}
				}
				if = {
					limit = { terrain = steppe } #Pastureland
					random = {
						chance = 40
						add_province_modifier = { name = arles_pasture duration = -1 }
						log = "MAINT: arles_base.5 Added Pasture to province"
					}
				}
				if = {
					limit = { province_id = 371 } #Sambia
					event_target:verbum = {
						change_variable = { which = amber_gaia value = 1 }
					}
					add_province_modifier = { name = arles_amber duration = -1 }
					log = "MAINT: arles_base.5 Added Amber to province"
				}
				if = {
					limit = { 
						event_target:verbum = {
							NOT = { check_variable = { which = "amber_gaia" value = 4.5 } }
						}
						region = custom_eastern_baltic 
						any_neighbor_province = {
							NOT = { has_province_modifier = arles_amber }
						}
					}
					event_target:verbum = {
						change_variable = { which = amber_gaia value = 1 }
					}
					add_province_modifier = { name = arles_amber duration = -1 }
					log = "MAINT: arles_base.5 Added Amber to province"
				}
				if = {
					limit = { 
						province_id = 925 #Mali
					}
					add_province_modifier = { name = arles_gold duration = -1 }
					log = "MAINT: arles_base.5 Added Gold to province"
				}
				if = {
					limit = { 
						province_id = 911 #Timbuktu
					}
					add_province_modifier = { name = arles_gold duration = -1 }
					log = "MAINT: arles_base.5 Added Gold to province"
				}
				if = {
					limit = {
						event_target:verbum = {
							NOT = { check_variable = { which = "gold_gaia" value = 0.5 } }
						}
						de_jure_liege_or_above = k_nubia #Gold for the Baqt
					}
					event_target:verbum = {
						change_variable = { which = gold_gaia value = 1 }
					}
					add_province_modifier = { name = arles_gold duration = -1 }
					log = "MAINT: arles_base.5 Added Gold to province"
				}
				if = {
					limit = { #5 random sources of Ivory
						event_target:verbum = {
							NOT = { check_variable = { which = "ivory_gaia" value = 4.5 } }
						}
						OR = {
							region = world_africa_east
							region = world_africa_west
						}
						OR = {
							terrain = desert 
							terrain = plains
						}
						any_neighbor_province = {
							NOT = { has_province_modifier = arles_ivory }
						}
					}
					event_target:verbum = {
						change_variable = { which = ivory_gaia value = 1 }
					}
					add_province_modifier = { name = arles_ivory duration = -1 }
					log = "MAINT: arles_base.5 Added Ivory to province"
				}
				if = {
					limit = {
						province_id = 448 #Salzburg
					}
					add_province_modifier = { name = arles_salt duration = -1 }
					log = "MAINT: arles_base.5 Added Salt to province"
				}
				if = {
					limit = {
						province_id = 515 #Tirgoviste
					}
					add_province_modifier = { name = arles_salt duration = -1 }
					log = "MAINT: arles_base.5 Added Salt to province"
				}
				if = {
					limit = {
						province_id = 916 #Taghaza
					}
					add_province_modifier = { name = arles_salt duration = -1 }
					log = "MAINT: arles_base.5 Added Salt to province"
				}
				if = {
					limit = {
						province_id = 527 #Krakow
					}
					add_province_modifier = { name = arles_salt duration = -1 }
					log = "MAINT: arles_base.5 Added Salt to province"
				}
				
				#BEGIN TRADE NODE SEEDING
				duchy = {
					save_event_target_as = trade_region
					set_title_flag = init_arles_trade
					log = "DEBUG arles_base.5 Saved trade region of [This.GetName] ([This.GetID]) for trade region processing"  
				}
			}
		}	
	}
}

#Base event for holding pop growth
character_event = {
	id = arles_base.6
	hide_window = yes
	is_triggered_only = yes
	only_independent = yes
	
	trigger = { 
		NOT = { has_global_flag = arles_pop_evaluated }
	}
	
	option = {
		any_independent_ruler = {
			if = { #Check for merchant republics
				limit = { 
					is_merchant_republic = yes 
					capital_scope = {
						duchy = { 
							NOT = { has_title_flag = arles_merch_rep_trade_node }
						}
					}
				} 
				capital_scope = {
					duchy = { subtract_variable = { which = trade_node value = 5 } }
					add_province_modifier = { name = arles_trade_node duration = -1 }
					log = "DEBUG Assigned new trade node to fledgling republic at [This.GetName] ([This.GetID])"
				}
			}
			if = { #Check for former merchant republics and remove trade node bonus
				limit = { 
					any_realm_title = {
						has_title_flag = arles_merch_rep_trade_node
						is_merchant_republic = no
						tier = DUKE
					}
				} 
				any_realm_title = {
					limit = { 
						has_title_flag = arles_merch_rep_trade_node
						is_merchant_republic = no
						tier = DUKE
					}
					change_variable = { which = trade_node value = 5 } 
					clr_title_flag - arles_merch_rep_trade_node
					any_direct_de_jure_vassal_title = {
						location = {
							if = {
								limit = { 
									has_province_modifier = arles_trade_node
									NOT = { check_variable = { which = province_pop value = 15 } }
								}
								remove_province_modifier = arles_trade_node
							}
						}
					}
				}
			}
			any_realm_province = {
				any_province_holding = {
					limit = { has_title_flag = holding_has_pop }
					log = "DEBUG arles_base.6 Began calculating pop growth in holding [This.GetName] ([This.GetID])"
					set_variable = { which = holding_pop_diff value = 1 } #reset from previous to default
				
					#BEGIN TERRAIN MODIFIERS
					multiply_variable = { which = holding_pop_diff which = holding_pop_diff_terr }
					log = "MAINT: arles_base.6 Successfully applied terrain modifiers to holding population diff at [This.holding_pop_diff.GetValue]"
					
					#BEGIN TRADE MODIFIERS
					if = {
						limit = { location = { has_province_modifier = arles_trade_node } }
						change_variable = { which = holding_pop_diff_trade value = 0.05 }
					}
					
					log = "MAINT: arles_base.6 Successfully summed trade modifiers at [This.holding_pop_diff_trade.GetValue]"
					
					multiply_variable = { which = holding_pop_diff which = holding_pop_diff_trade }
					log = "MAINT: arles_base.6 Successfully applied trade modifiers to holding population diff at [This.holding_pop_diff.GetValue]"
					set_variable = { which = holding_pop_diff_trade value = 1 } #reset for next pulse
					
					#BEGIN GOV MODIFIERS
					if = { 
						limit = { holding_type = nomad }
						set_variable = { which = holding_pop_diff value = 0 }
					}
					
					#SUM DIFF WITH HOLDING POPULATION
					change_variable = { which = holding_pop which = holding_pop_diff }
					log = "MAINT: arles_base.6 Successfully summed holding pop diff of [This.holding_pop_diff.GetValue] to holding population of [This.GetName] ([This.GetID]) at [This.holding_pop.GetValue]"
					
					#BEGIN POPULATION LEVEL ASSIGNMENT
					arles_holding_pop_level_effect = yes
					log = "MAINT: arles_base.6 Reached end of holding population calculations"
				}
				#BEGIN POPULATION LEVEL ASSIGNMENT
				arles_province_pop_level_effect = yes
				log = "MAINT: arles_base.6 Reached end of province population calculations"
			}
		}
		set_global_flag = arles_pop_evaluated
		character_event = { id = arles_base.15 } #Set up emerging trade zones
		character_event = { id = arles_base.16 } #Remove defunct trade zones
		character_event = { id = arles_base.13 days = 360 }
		repeat_event = { id = arles_base.6 days = 365 }
	}
}

#Fired from on_settlement_construction_completed to seed new settlements
#arles_base.7
character_event = {
	id = arles_base.7
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROM = {
			NOT = { has_title_flag = holding_has_pop }
			NOT = { holding_type = nomad }
		}
	}
	
	option = {
		name = "OK"
		FROM = {
			arles_holding_initial_setup_effect = yes
			log = "MAINT: arles.base.7 Set up holding defines for new settlement at [This.GetName] ([This.GetID])"
			
			#BEGIN ADDING HOLDING TERRAIN MODIFIERS
			arles_holding_initial_terrain_effect = yes
			
			#BEGIN ADDING PRIMARY POPS
			arles_holding_initial_pop_building_effect = yes
			arles_holding_initial_pop_level_effect = yes
			
			location = {
				#BEGIN POPULATION LEVEL ASSIGNMENT
				log = "DEBUG arles_base.7 Assessed population change in Province [This.GetName] ([This.GetID])"
				arles_province_pop_level_effect = yes
			}
		}
	}
}

character_event = {
	id = arles_base.8
	desc = arles_base.8_desc
	picture = GFX_evt_siege
	border = GFX_event_normal_frame_war
	is_triggered_only = yes
	
	trigger = {
		FROM = {
			NOT = { holding_type = nomad }
			holder_scope = { war_with = ROOT } #Besieger will not sack unless at war
			is_occupied = yes #occupied, not looted
		}
	}
	
	option = {
		name = "arles_base.8.opt.a" 
		FROM = {
			log = "EVENT: arles_base.8 Original holding population set at [This.holding_pop.GetValue]"
			if = {
				limit = { 
					has_building = tb_market_town_1 
					NOT = { has_building = tb_market_town_2 }
				}
				custom_tooltip = {
					text = arles_base.8.opt.a.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.85 } #15% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 2.5 }
			}
			if = {
				limit = {
					OR = {
						AND = {
							has_building = ca_town_1
							NOT = { has_building = ca_town_2 }
						}
						AND = {
							has_building = ct_marketplace_1
							NOT = { has_building = ct_marketplace_2 }
						}
						AND = {
							has_building = tp_town_1
							NOT = { has_building = tp_town_2 }
						}
						AND = {
							has_building = tb_market_town_2
							NOT = { has_building = tb_market_town_3 }
						}
					}
				}
				custom_tooltip = {
					text = arles_base.8.opt.a.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.85 } #15% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 5 }
			}
			if = {
				limit = {
					OR = {
						AND = {
							has_building = ca_town_2
							NOT = { has_building = ca_town_3 }
						}
						AND = {
							has_building = ct_marketplace_2
							NOT = { has_building = ct_marketplace_3 }
						}
						AND = {
							has_building = tp_town_2
							NOT = { has_building = tp_town_3 }
						}
						AND = {
							has_building = tb_market_town_3
							NOT = { has_building = tb_market_town_4 }
						}
					}
				}
				custom_tooltip = {
					text = arles_base.8.opt.a.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.90 } #10% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 10 }
			}
			if = {
				limit = {
					OR = {
						AND = {
							has_building = ca_town_3
							NOT = { has_building = ca_town_4 }
						}
						AND = {
							has_building = ct_marketplace_3
							NOT = { has_building = ct_marketplace_4 }
						}
						AND = {
							has_building = tp_town_3
							NOT = { has_building = tp_town_4 }
						}
						has_building = tb_market_town_4	
					}
				}
				custom_tooltip = {
					text = arles_base.8.opt.a.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.90 } #10% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 15 }
			}
			if = {
				limit = {
					OR = {
						AND = {	
							has_building = ca_town_4
							NOT = { has_building = ca_town_5 }
						}
						AND = {
							has_building = ct_marketplace_4
							NOT = { has_building = ct_marketplace_5 }
						}
						AND = {
							has_building = tp_town_4
							NOT = { has_building = tp_town_5 }
						}
					}
				}
				custom_tooltip = {
					text = arles_base.8.opt.a.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.925 } #7.5% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 20 }
			}
			if = {
				limit = {
					OR = {
						has_building = ca_town_5
						AND = {
							has_building = ct_marketplace_5
							NOT = { has_building = ct_marketplace_6 }
						}
						AND = {
							has_building = tp_town_5
							NOT = { has_building = tp_town_6 }
						}	
					}
				}
				custom_tooltip = {
					text = arles_base.8.opt.a.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.925 } #7.5% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 25 }
			}
			if = {
				limit = {
					OR = {
						has_building = ct_marketplace_6
						has_building = tp_town_6
					}
				}
				custom_tooltip = {
					text = arles_base.8.opt.a.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.95 } #5% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 30 }
			}			
			hidden_tooltip = { add_holding_modifier = { modifier = arles_victa years = 1 } }
			
			#BEGIN HOLDING LEVEL ASSIGNMENT
			hidden_tooltip = {
				arles_holding_pop_level_decline_effect = yes
				log = "EVENT: arles_base.8 Reached end of holding population calculations"
				location = {	
					#BEGIN POPULATION LEVEL ASSIGNMENT
					arles_province_pop_level_decline_effect = yes
				}
			}
		}
		if = {
			limit = { trait = kind }
			remove_trait = kind
		}
		if = {
			limit = { trait = just }
			remove_trait = just
		}
		#if = {
			#limit = { 
			#	religion_group = pagan_group
			#	NOT = { has_character_modifier = arles_victor_pagan }
			#}
			#add_character_modifier = { name = arles_victor_pagan duration = 365 }
		#}
		if = {
			limit = { has_character_modifier = arles_misericordia_victis }
			remove_character_modifier = arles_misericordia_victis
		}
		if = {
			limit = { 
				NOT = { 
					#religion_group = pagan_group
					has_character_modifier = arles_victor 
				}
			}
			add_character_modifier = { name = arles_victor duration = 365 }
		}
		if = {
			limit = { 
				#religion_group = pagan_group
				has_character_modifier = arles_victor 
			}
			remove_character_modifier = arles_victor
			add_character_modifier = { name = arles_victor duration = 365 } #reset
		}
		log = "EVENT: arles_base.8 [This.GetTitledName] decided to sack [From.GetName], reducing [From.GetName]'s population to [From.holding_pop.GetValue]"
		ai_chance = {
			factor = 2
			modifier = { # Won't do it if good OR lawful
				factor = 0
				OR = {
					trait = kind
					trait = just
				}
			}
			modifier = { # More likely if mean
				factor = 2
				OR = {
					trait = cruel
					trait = impaler
				}
			}
			modifier = { # More likely if greedy
				factor = 2
				trait = greedy
			}
			modifier = { # More likely if religious enemies
				factor = 2
				FROM = {
					holder_scope = {
						NOT = { religion_group = ROOT }
					}
				}
				OR = {
					trait = zealous
					trait = crusader
					trait = mujahid
					trait = holy_warrior
				}
			}
			modifier = { #More likely if broke
				factor = 2
				NOT = { wealth = 10 }
			}
		}
	}
	
	option = {
		name = "arles_base.8.opt.b" 
		trigger = { 
			NOT = { has_character_modifier = arles_raptor }
		}
		FROM = {
			log = "EVENT: arles_base.8 Original holding population set at [This.holding_pop.GetValue]"
			if = {
				limit = {
					has_building = tb_market_town_1
					NOT = { has_building = tb_market_town_2 }
				}
				custom_tooltip = {
					text = arles_base.8.opt.b.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.67 } #33% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 5 }
			}
			if = {
				limit = {
					OR = {
						AND = { 
							has_building = ca_town_1
							NOT = { has_building = ca_town_2 }
						}
						AND = {
							has_building = ct_marketplace_1
							NOT = { has_building = ct_marketplace_2 }
						}
						AND = {
							has_building = tp_town_1
							NOT = { has_building = tp_town_2 }
						}
						AND = {
							has_building = tb_market_town_2
							NOT = { has_building = tb_market_town_3 }
						}
					}
				}
				custom_tooltip = {
					text = arles_base.8.opt.b.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.67 } #33% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 10 }
			}
			if = {
				limit = {
					OR = {
						AND = {
							has_building = ca_town_2
							NOT = { has_building = ca_town_3 }
						}
						AND = {
							has_building = ct_marketplace_2
							NOT = { has_building = ct_marketplace_3 }
						}
						AND = {
							has_building = tp_town_2
							NOT = { has_building = tp_town_3 }
						}
						AND = {
							has_building = tb_market_town_3
							NOT = { has_building = tb_market_town_4 }
						}
					}
				}
				custom_tooltip = {
					text = arles_base.8.opt.b.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.80 } #20% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 20 }
			}
			if = {
				limit = {
					OR = {
						AND = {
							has_building = ca_town_3
							NOT = { has_building = ca_town_4 }
						}
						AND = {
							has_building = ct_marketplace_3
							NOT = { has_building = ct_marketplace_4 }
						}
						AND = {
							has_building = tp_town_3
							NOT = { has_building = tp_town_4 }
						}
						has_building = tb_market_town_4
					}
				}
				custom_tooltip = {
					text = arles_base.8.opt.b.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.80 } #20% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 30 }
			}
			if = {
				limit = {
					OR = {
						AND = {
							has_building = ca_town_4
							NOT = { has_building = ca_town_5 }
						}
						AND = {
							has_building = ct_marketplace_4
							NOT = { has_building = ct_marketplace_5 }
						}
						AND = {
							has_building = tp_town_4
							NOT = { has_building = tp_town_5 }
						}
					}
				}
				custom_tooltip = {
					text = arles_base.8.opt.b.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.85 } #15% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 40 }
			}
			if = {
				limit = {
					OR = {
						has_building = ca_town_5
						AND = {
							has_building = ct_marketplace_5
							NOT = { has_building = ct_marketplace_6 }
						}
						AND = {
							has_building = tp_town_5
							NOT = { has_building = tp_town_6 }
						}
					}
				}
				custom_tooltip = {
					text = arles_base.8.opt.b.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.85 } #15% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 50 }
			}
			if = {
				limit = {
					OR = {
						has_building = ct_marketplace_6
						has_building = tp_town_6
					}
				}
				custom_tooltip = {
					text = arles_base.8.opt.b.tooltip
					hidden_tooltip = {
						set_variable = { which = holding_pop_dmg value = 0.90 } #10% population loss
						multiply_variable = { which = holding_pop which = holding_pop_dmg }
					}
				}
				PREV = { wealth = 60 }
			}			
			hidden_tooltip = { #alert owner of action
				holder_scope = { 
					if = {
						limit = { higher_real_tier_than = baron }
						character_event = { id = arles_base.9 days = 1 } 
					}
				}
			}
			hidden_tooltip = { add_holding_modifier = { modifier = arles_rapta years = 2 } }
			
			#BEGIN HOLDING LEVEL ASSIGNMENT
			hidden_tooltip = {
				arles_holding_pop_level_decline_effect = yes
				log = "EVENT: arles_base.8 Reached end of holding population calculations"
				location = {	
					#BEGIN POPULATION LEVEL ASSIGNMENT
					arles_province_pop_level_decline_effect = yes
				}
			}
		}		
		if = {
			limit = { trait = kind }
			remove_trait = kind
		}
		if = {
			limit = { trait = just }
			remove_trait = just
		}
		if = {
			limit = { NOT = { trait = cruel } }
			add_trait = cruel
		}
		#if = {
		#	limit = { 
		#		religion_group = pagan_group
		#		NOT = { has_character_modifier = arles_raptor_pagan }
		#	}
		#	add_character_modifier = { name = arles_raptor_pagan duration = 365 }
		#}
		if = {
			limit = { has_character_modifier = arles_misericordia_victis }
			remove_character_modifier = arles_misericordia_victis
		}
		if = {
			limit = { 
				#NOT = { religion_group = pagan_group }
				NOT = { has_character_modifier = arles_raptor }
			}
			add_character_modifier = { name = arles_raptor duration = 730 }
		}
		log = "MAINT: arles_base.8 [This.GetTitledName] decided to pillage [From.GetName], reducing [From.GetName]'s population to [From.holding_pop.GetValue]"
		
		ai_chance = {
			factor = 1
			modifier = { # Won't do it if good OR lawful
				factor = 0
				OR = {
					trait = kind
					trait = just
				}
			}
			modifier = { # More likely if mean
				factor = 2
				OR = {
					trait = cruel
					trait = impaler
				}
			}
			modifier = { # More likely if religious enemies
				factor = 2
				FROM = {
					holder_scope = {
						NOT = { religion_group = ROOT }
					}
				}
				OR = {
					trait = zealous
					trait = crusader
					trait = mujahid
					trait = holy_warrior
				}
			}
			modifier = { #More likely if broke
				factor = 2
				NOT = { wealth = 10 }
			}
		}
	}
	option = {
		name = arles_base.8.opt.c
		custom_tooltip = { 
			text = arles_base.8.opt.c.tooltip 
			hidden_tooltip = {
				add_character_modifier = { name = arles_misericordia_victis duration = 180 }
				any_realm_character = {
					limit = {
						has_minor_title = title_commander
						trait = cruel
					}
					opinion = { modifier = opinion_very_disappointed who = ROOT years = 1 }
				}
			}
		}
		log = "EVENT: arles_base.8 [This.GetTitledName] decided to leave [From.GetName] alone, keeping [From.GetName]'s population at [From.holding_pop.GetValue]"
		
		ai_chance = {
			factor = 1
			modifier = { #Good OR lawful
				factor = 2
				OR = {
					trait = kind
					trait = just
				}
			}
			modifier = { # Less likely if mean
				factor = 0.5
				OR = {
					trait = cruel
					trait = impaler
				}
			}
			modifier = { # Less likely if religious enemies
				factor = 0.5
				FROM = {
					holder_scope = {
						NOT = { religion_group = ROOT }
					}
				}
				OR = {
					trait = zealous
					trait = crusader
					trait = mujahid
					trait = holy_warrior
				}
			}
			modifier = { #Less likely if broke
				factor = 0.5
				NOT = { wealth = 10 }
			}
		}
	}
}

character_event = {
	id = arles_base.9
	desc = arles_base.9_desc
	picture = GFX_evt_siege
	is_triggered_only = yes
	
	trigger = {
		FROMFROM = { NOT = { holding_type = nomad } }
	}
	
	option = {
		trigger = {
			NOR = {
				AND = {
					real_tier = count
					NOT = { demesne_size = 5 }
					FROM = { higher_real_tier_than = DUKE }
				}
				AND = {
					real_tier = count
					demesne_size = 5
					FROM = { higher_real_tier_than = KING }
				}
				tier = baron
			}
		}			
		name = arles_base.9.opt.a
		if = {
			limit = { FROM = { higher_real_tier_than = baron } }
			add_rival = FROM
		}
		if = {
			limit = { NOT = { FROM = { higher_real_tier_than = baron } } }
			hidden_tooltip = {
				FROM = { 
					liege = {
						if = {
							limit = { higher_real_tier_than = baron }
							save_event_target_as = raptor_liege
						}
						if = { 
							limit = { NOT = { higher_real_tier_than = baron } }
							liege = { save_event_target_as = raptor_liege }
						}
					}
				}
			}
			add_rival = event_target:raptor_liege
		}
		prestige = -25
		log = "EVENT: arles_base.9 [This.GetTitledName] decided to rival [From.GetTitledName] for pillaging his city"
		ai_chance = {
			factor = 1
			modifier = { #Brave or Just
				factor = 0
				OR = {
					trait = brave
					trait = just
				}
			}
			modifier = { # Less likely if mean
				factor = 0.5
				OR = {
					trait = cruel
					trait = impaler
				}
			}
			modifier = { # More likely if religious enemies
				factor = 2
				FROM = {
					owner = {
						NOT = { religion_group = ROOT }
					}
				}
				OR = {
					trait = zealous
					trait = crusader
					trait = mujahid
					trait = holy_warrior
				}
			}
		}
	}
	
	option = {
		name = arles_base.9.opt.b
		prestige = -50
		log = "EVENT: arles_base.9 [This.GetTitledName] decided not to take action against [From.GetTitledName] for pillaging his city"
		ai_chance = {
			factor = 1
			modifier = { #More likely if not brave or just
				factor = 0.5
				OR = {
					trait = brave
					trait = just
				}
			}
			modifier = { # More likely if mean
				factor = 2
				OR = {
					trait = cruel
					trait = impaler
					trait = arbitrary
				}
			}
			modifier = { # Less likely if religious enemies
				factor = 0.5
				FROM = {
					owner = {
						NOT = { religion_group = ROOT }
					}
				}
				OR = {
					trait = zealous
					trait = crusader
					trait = mujahid
					trait = holy_warrior
				}
			}
		}
	}
}

#Holding looting depop event
character_event = {
	id = arles_base.10
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		FROM = { 
			is_occupied = no #looted, not occupied
			NOT = { holding_type = nomad } 
			holder_scope = { war_with = ROOT }
		}
	}
	
	option = {
		name = "OK" 
		FROM = {
			log = "MAINT: arles_base.10 Original holding population set at [This.holding_pop.GetValue]"
			if = {
				limit = {
					has_building = tb_market_town_1
					NOT = { has_building = tb_market_town_2 }
				}
				set_variable = { which = holding_pop_dmg value = 0.60 } #40% population loss
				multiply_variable = { which = holding_pop which = holding_pop_dmg }
			}
			if = {
				limit = {
					OR = {
						AND = { 
							has_building = ca_town_1
							NOT = { has_building = ca_town_2 }
						}
						AND = {
							has_building = ct_marketplace_1
							NOT = { has_building = ct_marketplace_2 }
						}
						AND = {
							has_building = tp_town_1
							NOT = { has_building = tp_town_2 }
						}
						AND = {
							has_building = tb_market_town_2
							NOT = { has_building = tb_market_town_3 }
						}
					}
				}
				set_variable = { which = holding_pop_dmg value = 0.65 } #35% population loss
				multiply_variable = { which = holding_pop which = holding_pop_dmg }
			}
			if = {
				limit = {
					OR = {
						AND = {
							has_building = ca_town_2
							NOT = { has_building = ca_town_3 }
						}
						AND = {
							has_building = ct_marketplace_2
							NOT = { has_building = ct_marketplace_3 }
						}
						AND = {
							has_building = tp_town_2
							NOT = { has_building = tp_town_3 }
						}
						AND = {
							has_building = tb_market_town_3
							NOT = { has_building = tb_market_town_4 }
						}
					}
				}
				set_variable = { which = holding_pop_dmg value = 0.70 } #30% population loss
				multiply_variable = { which = holding_pop which = holding_pop_dmg }
			}
			if = {
				limit = {
					OR = {
						AND = {
							has_building = ca_town_3
							NOT = { has_building = ca_town_4 }
						}
						AND = {
							has_building = ct_marketplace_3
							NOT = { has_building = ct_marketplace_4 }
						}
						AND = {
							has_building = tp_town_3
							NOT = { has_building = tp_town_4 }
						}
						has_building = tb_market_town_4
					}
				}
				set_variable = { which = holding_pop_dmg value = 0.75 } #25% population loss
				multiply_variable = { which = holding_pop which = holding_pop_dmg }
			}
			if = {
				limit = {
					OR = {
						AND = {
							has_building = ca_town_4
							NOT = { has_building = ca_town_5 }
						}
						AND = {
							has_building = ct_marketplace_4
							NOT = { has_building = ct_marketplace_5 }
						}
						AND = {
							has_building = tp_town_4
							NOT = { has_building = tp_town_5 }
						}
					}
				}
				set_variable = { which = holding_pop_dmg value = 0.80 } #20% population loss
				multiply_variable = { which = holding_pop which = holding_pop_dmg }
			}
			if = {
				limit = {
					OR = {
						has_building = ca_town_5
						AND = {
							has_building = ct_marketplace_5
							NOT = { has_building = ct_marketplace_6 }
						}
						AND = {
							has_building = tp_town_5
							NOT = { has_building = tp_town_6 }
						}
					}
				}
				set_variable = { which = holding_pop_dmg value = 0.85 } #15% population loss
				multiply_variable = { which = holding_pop which = holding_pop_dmg }
			}
			if = {
				limit = {
					OR = {
						has_building = ct_marketplace_6
						has_building = tp_town_6
					}
				}
				set_variable = { which = holding_pop_dmg value = 0.90 } #10% population loss
				multiply_variable = { which = holding_pop which = holding_pop_dmg }
			}	
			if = {
				limit = { has_character_modifier = arles_misericordia_victis }
				remove_character_modifier = arles_misericordia_victis
			}
			hidden_tooltip = { #alert owner of action
				holder_scope = { 
					if = {
						limit = { higher_real_tier_than = baron }
						character_event = { id = arles_base.9 days = 1 } 
					}
				}
			}
			
			#BEGIN HOLDING LEVEL ASSIGNMENT
			hidden_tooltip = {
				arles_holding_pop_level_decline_effect = yes
				log = "MAINT: arles_base.8 Reached end of holding population calculations"
				location = {	
					#BEGIN POPULATION LEVEL ASSIGNMENT
					arles_province_pop_level_decline_effect = yes
				}
			}
		}		
		log = "MAINT: arles_base.10 [This.GetTitledName] raided [From.GetName], reducing [From.GetName]'s population to [From.holding_pop.GetValue]"
	}
}

#Death and disease holding dmg
character_event = {
	id = arles_base.11
	hide_window = yes
	is_triggered_only = yes
	only_independent = yes
	
	trigger = {
		NOT = { has_global_flag = arles_disease_evaluated }
		any_independent_ruler = {
			any_realm_province = {
				#OR = {
					#has_disease = tuberculosis
					#has_disease = typhoid_fever
					#has_disease = typhus
					#has_disease = bubonic_plague
					#has_disease = measles
					#has_disease = small_pox
					#has_disease = syphilis
				#}
				has_disease = yes
			}
		}
	}
					
	option = {
		set_global_flag = arles_disease_evaluated
		any_independent_ruler = {
			any_realm_province = {
				limit = { has_disease = yes }
				any_province_holding = {
					#BEGIN HOLDING DISEASE MODIFIERS
					log = "MAINT: arles_base.11 Begin processing of  [This.GetName] ([This.GetID]) with holding population of [This.holding_pop.GetValue]"
					if = { #Tuberculosis set at 80% annual mortality (calculated from contagiousness as number of people likely to be infected and spread out over 4 month pulses)
						limit = { PREV = { any_province_character = { trait = has_tuberculosis } } }
						set_variable = { which = holding_pop_diff_disease value = 0.96 }
						log = "MAINT: arles_base.11 Province is infected with tuberculosis, with number of survivors at end of pulse at [This.holding_pop_diff_disease.GetValue]/1 population"
					}
					if = { #Typhoid set at 60% mortality (calculated from contagiousness as number of people likely to be infected and spread out over 4 month pulses)
						limit = { PREV = { any_province_character = { trait = has_typhoid_fever } } }
						set_variable = { which = holding_pop_diff_disease value = 0.97 }
						log = "MAINT: arles_base.11 Province is infected with typhoid fever, with number of survivors at end of pulse at [This.holding_pop_diff_disease.GetValue]/1 population"
					}
					if = { #Typhus set at 40% mortality (calculated from contagiousness as number of people likely to be infected and spread out over 4 month pulses)
						limit = { PREV = { any_province_character = { trait = has_typhus } } }
						set_variable = { which = holding_pop_diff_disease value = 0.95 }
						log = "MAINT: arles_base.11 Province is infected with typhus, with number of survivors at end of pulse at [This.holding_pop_diff_disease.GetValue]/1 population"
					}
					if = { #Pesta negra set at 60% mortality (calculated from contagiousness as number of people likely to be infected and spread out over 4 month pulses)
						limit = { PREV = { any_province_character = { trait = has_bubonic_plague } } }
						set_variable = { which = holding_pop_diff_disease value = 0.75 }
						log = "MAINT: arles_base.11 Province is infected with the black plague, with number of survivors at end of pulse at [This.holding_pop_diff_disease.GetValue]/1 population"
					}
					if = { #Measles set at 15% mortality (calculated from contagiousness as number of people likely to be infected and spread out over 4 month pulses)
						limit = { PREV = { any_province_character = { trait = has_measles } } }
						set_variable = { which = holding_pop_diff_disease value = 0.98 }
						log = "MAINT: arles_base.11 Province is infected with measles, with number of survivors at end of pulse at [This.holding_pop_diff_disease.GetValue]/1 population"
					}
					if = { #Smallpox set at 60% mortality (calculated from contagiousness as number of people likely to be infected and spread out over 4 month pulses)
						limit = { PREV = { any_province_character = { trait = has_small_pox } } }
						set_variable = { which = holding_pop_diff_disease value = 0.89 }
						log = "MAINT: arles_base.11 Province is infected with smallpox, with number of survivors at end of pulse at [This.holding_pop_diff_disease.GetValue]/1 population"
					}
					if = { #Syphilis set at 35% mortality (calculated from contagiousness as number of people likely to be infected and spread out over 4 month pulses)
						limit = { PREV = { any_province_character = { trait = has_aztec_disease } } }
						set_variable = { which = holding_pop_diff_disease value = 0.94 }
						log = "MAINT: arles_base.11 Province is infected with syphilis, with number of survivors at end of pulse at [This.holding_pop_diff_disease.GetValue]/1 population"
					}
					if = { #For some reason, no one is infected, which apparently happens a lot
						limit = {
							PREV = { 
								NOT = { 
									any_province_character = {
										OR = {
											trait = has_tuberculosis
											trait = has_typhoid_fever
											trait = has_typhus
											trait = has_bubonic_plague
											trait = has_measles
											trait = has_small_pox
											trait = has_aztec_disease 
										} 
									}
								}
								has_disease = yes
							}
						}
						set_variable = { which = holding_pop_diff_disease value = 0.95 }
						log = "MAINT: arles_base.11 Province is infected, with number of survivors at end of pulse at [This.holding_pop_diff_disease.GetValue]/1 population"
					}
					
					#POPULATION-DISEASE MODIFIERS
					multiply_variable = { which = holding_pop which = holding_pop_diff_disease }
					set_variable = { which = holding_pop_diff_disease value = 1 } #reset for next pulse
					log = "MAINT: arles_base.11 Successfully summed holding population to [This.holding_pop.GetValue] after applying disease modifiers"
					
					#BEGIN HOLDING LEVEL ASSIGNMENT
					arles_holding_pop_level_decline_effect = yes
					log = "MAINT: arles_base.11 Reached end of holding population calculations"
					location = {	
						#BEGIN POPULATION LEVEL ASSIGNMENT
						arles_province_pop_level_decline_effect = yes
					}
				}
			}
		}
		character_event = { id = arles_base.14 days = 120 }
	}
}

#Trade nodes and routes
character_event = {
	id = arles_base.12
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		event_target:trade_region = {
			has_title_flag = init_arles_trade
		}
	}
	option = {
		name = "OK"
		event_target:trade_region = {
			clr_title_flag = init_arles_trade
			#Trade Node Candidacy
			set_variable = { which = trade_node value = 4 }
			#Trade Region (De Jure Duchy) Base Resource Counter
			set_variable = { which = arles_fertile value = 0 }
			set_variable = { which = arles_fishing value = 0 }
			set_variable = { which = arles_game value = 0 }
			set_variable = { which = arles_minerals value = 0 }
			set_variable = { which = arles_pasture value = 0 }
			set_variable = { which = arles_silver value = 0 }
			set_variable = { which = arles_stone value = 0 }
			#Trade Region (De Jure Duchy) Natural Luxury Resource Count
			set_variable = { which = arles_amber value = 0 }
			set_variable = { which = arles_furs value = 0 }
			set_variable = { which = arles_gold value = 0 }
			set_variable = { which = arles_ivory value = 0 }
			set_variable = { which = arles_salt value = 0 }
			any_direct_de_jure_vassal_title = {
				location = {
					log = "DEBUG arles_base.12 Evaluating [This.GetName] ([This.GetID])'s base resources." 
					#Trade Region (De Jure Duchy) Base Resource Count
					if = {
						limit = { has_province_modifier = arles_fertile }
						PREVPREV = { 
							subtract_variable = { which = trade_node value = 1 } 
							change_variable = { which = arles_fertile value = 1 }
						}
					}
					if = {
						limit = { has_province_modifier = arles_fishing }
						PREVPREV = { 
							subtract_variable = { which = trade_node value = 1 } 
							change_variable = { which = arles_fishing value = 1 }
						}
					}
					if = {
						limit = { has_province_modifier = arles_game }
						PREVPREV = { 
							subtract_variable = { which = trade_node value = 1 } 
							change_variable = { which = arles_game value = 1 }
						}
					}
					if = {
						limit = { has_province_modifier = arles_minerals }
						PREVPREV = { 
							subtract_variable = { which = trade_node value = 1 } 
							change_variable = { which = arles_minerals value = 1 }
						}
					}
					if = {
						limit = { has_province_modifier = arles_pasture }
						PREVPREV = { 
							subtract_variable = { which = trade_node value = 1 } 
							change_variable = { which = arles_pasture value = 1 }
						}
					}
					if = {
						limit = { has_province_modifier = arles_silver }
						PREVPREV = { 
							subtract_variable = { which = trade_node value = 1 } 
							change_variable = { which = arles_silver value = 1 }
						}
					}
					if = {
						limit = { has_province_modifier = arles_stone }
						PREVPREV = { 
							subtract_variable = { which = trade_node value = 1 } 
							change_variable = { which = arles_stone value = 1 }
						}
					}
					#BEGIN NATURAL LUXURY GOODS
					if = {
						limit = { has_province_modifier = arles_amber }
						PREVPREV = { 
							subtract_variable = { which = trade_node value = 2 } 
							change_variable = { which = arles_amber value = 1 }
						}
					}
					if = {
						limit = { has_province_modifier = arles_furs }
						PREVPREV = { 
							subtract_variable = { which = trade_node value = 2 } 
							change_variable = { which = arles_furs value = 1 }
						}
					}
					if = {
						limit = { has_province_modifier = arles_gold }
						PREVPREV = { 
							subtract_variable = { which = trade_node value = 2 } 
							change_variable = { which = arles_gold value = 1 }
						}
					}
					if = {
						limit = { has_province_modifier = arles_ivory }
						PREVPREV = { 
							subtract_variable = { which = trade_node value = 2 } 
							change_variable = { which = arles_ivory value = 1 }
						}
					}
					if = {
						limit = { has_province_modifier = arles_salt }
						PREVPREV = { 
							subtract_variable = { which = trade_node value = 2 } 
							change_variable = { which = arles_salt value = 1 }
						}
					}
					#BEGIN POPULATION MODIFIERS
					if = {
						limit = { has_province_modifier = arles_pop3 }
						PREVPREV = { subtract_variable = { which = trade_node value = 1 } }
					}
					if = {
						limit = { has_province_modifier = arles_pop4 }
						PREVPREV = { subtract_variable = { which = trade_node value = 2 } }
					}
					if = {
						limit = { has_province_modifier = arles_pop5 }
						PREVPREV = { subtract_variable = { which = trade_node value = 3 } }
					}
					#BEGIN TRADE MODIFIERS
					if = {
						limit = { trade_route = silk_road }
						PREVPREV = { subtract_variable = { which = trade_node value = 1 } }
					}
					duchy = {
						if = {
							limit = { 
								OR = {
									is_merchant_republic = yes
									kingdom = { is_merchant_republic = yes } 
								}
							}
							subtract_variable = { which = trade_node value = 5 }
							set_title_flag = arles_merch_rep_trade_node
						}
					}
				}
			}
			log = "DEBUG arles_base.12 Trade Region of [This.GetName] ([This.GetID]) contains [This.arles_fertile.GetValue] Farms, [This.arles_fishing.GetValue] Fish, [This.arles_game.GetValue] Game, [This.arles_minerals.GetValue] Minerals, [This.arles_pasture.GetValue] Pastures, [This.arles_silver.GetValue] Silver, and [This.arles_stone.GetValue] Stone as base resources."
			capital_scope = {
				if = {
					limit = { 
						NOT = { has_province_modifier = arles_pop1 }
						PREV = { NOT = { check_variable = { which = trade_node value = 0 } } } 
						check_variable = { which = province_pop value = 14.99 }
					}
					add_province_modifier = { name = arles_trade_node duration = -1 }
					change_variable = { which = province_econ_count_max value = 1 }
					log = "DEBUG Trade Region of [This.GetName] ([This.GetID]) was assigned a trade node"  
				}
			}
		}
	}
}

#arles_base.13
#From arles_base.6 (resetting to allow for pop growth)
character_event = {
	id = arles_base.13
	hide_window = yes
	is_triggered_only = yes
	
	trigger = { 
		has_global_flag = arles_pop_evaluated
	}
	
	option = { 
		name = "OK"
		clr_global_flag = arles_pop_evaluated
		log = "DEBUG arles_base.13 Gamestate restored to allow processing of population"
	}
}

#arles_base.14
#From arles_base.11 (resetting to allow for disease dmg to proc)
character_event = {
	id = arles_base.14
	hide_window = yes
	is_triggered_only = yes
	
	trigger = { 
		has_global_flag = arles_disease_evaluated
	}
	
	option = { 
		name = "OK"
		clr_global_flag = arles_disease_evaluated
		log = "DEBUG arles_base.14 Gamestate restored to allow processing of disease"
	}
}

#Set up Trade Zones
character_event = {
	id = arles_base.15
	hide_window = yes
	is_triggered_only = yes
	only_independent = yes
	
	trigger = {
		any_independent_ruler = {
			any_realm_province = { 
				has_province_modifier = arles_trade_node 
				NOT = { has_province_flag = arles_trade_zone_evaluated }
			}
		}
	}

	option = {
		name = "OK"
		any_independent_ruler = {
			any_realm_province = {
				limit = { has_province_modifier = arles_trade_node }
				log = "DEBUG arles_base.15 Trade Node found at [This.GetName] ([This.GetID])"
				set_province_flag = arles_trade_zone_evaluated
				save_event_target_as = trade_node
				duchy = {
					any_direct_de_jure_vassal_title = {
						location = {
							if = {
								limit = {
									NOT = { has_province_modifier = arles_trade_node } 
								}
								add_province_modifier = { name = arles_trade_zone duration = -1 }
								set_province_flag = arles_trade_zone_province_A_@event_target:trade_node
							}
						}
					}
				}
				any_neighbor_province = {
					duchy = {
						event_target:trade_node = { log = "DEBUG arles_base.15 Trade Region of [Prev.GetName] ([Prev.GetID]) aligned with trade node at [This.GetName] ([This.GetID])" }
						any_direct_de_jure_vassal_title = {
							location = {
								if = {
									limit = { 
										NOT = { has_province_modifier = arles_trade_node } 
										NOT = { de_jure_liege = event_target:trade_node }
									}
									add_province_modifier = { name = arles_trade_zone duration = -1 }
									set_province_flag = arles_trade_zone_province_B_@event_target:trade_node 
								}
							}
						}
					}
				}
			}
		}
	}
}

#Deconstruct Trade Zones
character_event = {
	id = arles_base.16
	hide_window = yes
	is_triggered_only = yes
	only_independent = yes
	
	trigger = {
		any_independent_ruler = {
			any_realm_province = { 
				NOT = { has_province_modifier = arles_trade_node }
				has_province_flag = arles_trade_zone_evaluated
			}
		}
	}
	
	option = {
		name = "OK"
		any_independent_ruler = {
			any_realm_province = {
				limit = { 
					NOT = { has_province_modifier = arles_trade_node }
					has_province_flag = arles_trade_zone_evaluated 
				}
				log = "DEBUG arles_base.16 Former trade node found at [This.GetName] ([This.GetID])"
				clr_province_flag = arles_trade_zone_evaluated
				duchy = {
					any_direct_de_jure_vassal_title = {
						location = {
							if = {
								limit = { 
									has_province_modifier = arles_trade_zone 
								}
								remove_province_modifier = arles_trade_zone
								clr_province_flag = arles_trade_zone_province_A_@event_target:trade_node
								clr_province_flag = arles_trade_zone_province_B_@event_target:trade_node
							}
						}
					}
				}
				any_neighbor_province = {
					duchy = {
						PREVPREV = { log = "DEBUG arles_base.16 Trade Region of [Prev.GetName] ([Prev.GetID]) de-aligned with trade node at [This.GetName] ([This.GetID])" }
						any_direct_de_jure_vassal_title = {
							location = {
								if = {
									limit = { 
										has_province_modifier = arles_trade_zone 
									}
									remove_province_modifier = arles_trade_zone
									clr_province_flag = arles_trade_zone_province_A_@event_target:trade_node
									clr_province_flag = arles_trade_zone_province_B_@event_target:trade_node
								}
							}
						}
					}
				}
			}
		}
	}
}
